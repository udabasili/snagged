[{"C:\\Users\\black\\Documents\\Programming\\Acumen-Developers\\Web\\snagged\\src\\components\\navigation.component.jsx":"1","C:\\Users\\black\\Documents\\Programming\\Acumen-Developers\\Web\\snagged\\src\\MainRoute.js":"2","C:\\Users\\black\\Documents\\Programming\\Acumen-Developers\\Web\\snagged\\src\\components\\register.component.jsx":"3","C:\\Users\\black\\Documents\\Programming\\Acumen-Developers\\Web\\snagged\\src\\components\\login.component.jsx":"4","C:\\Users\\black\\Documents\\Programming\\Acumen-Developers\\Web\\snagged\\src\\components\\about.component.jsx":"5","C:\\Users\\black\\Documents\\Programming\\Acumen-Developers\\Web\\snagged\\src\\components\\loading.component.jsx":"6","C:\\Users\\black\\Documents\\Programming\\Acumen-Developers\\Web\\snagged\\src\\pages\\registration\\registration.routes.jsx":"7","C:\\Users\\black\\Documents\\Programming\\Acumen-Developers\\Web\\snagged\\src\\pages\\registration\\phone-number-verification.page.jsx":"8","C:\\Users\\black\\Documents\\Programming\\Acumen-Developers\\Web\\snagged\\src\\pages\\registration\\image-upload.page.jsx":"9","C:\\Users\\black\\Documents\\Programming\\Acumen-Developers\\Web\\snagged\\src\\index.js":"10","C:\\Users\\black\\Documents\\Programming\\Acumen-Developers\\Web\\snagged\\src\\redux\\store.js":"11","C:\\Users\\black\\Documents\\Programming\\Acumen-Developers\\Web\\snagged\\src\\reportWebVitals.js":"12","C:\\Users\\black\\Documents\\Programming\\Acumen-Developers\\Web\\snagged\\src\\redux\\user\\user.actions.js":"13","C:\\Users\\black\\Documents\\Programming\\Acumen-Developers\\Web\\snagged\\src\\components\\protected-route.component.jsx":"14","C:\\Users\\black\\Documents\\Programming\\Acumen-Developers\\Web\\snagged\\src\\pages\\profile.page.jsx":"15","C:\\Users\\black\\Documents\\Programming\\Acumen-Developers\\Web\\snagged\\src\\pages\\subscription.page.jsx":"16","C:\\Users\\black\\Documents\\Programming\\Acumen-Developers\\Web\\snagged\\src\\redux\\actionTypes.js":"17","C:\\Users\\black\\Documents\\Programming\\Acumen-Developers\\Web\\snagged\\src\\pages\\registration\\user-info.page.jsx":"18","C:\\Users\\black\\Documents\\Programming\\Acumen-Developers\\Web\\snagged\\src\\components\\header.component.jsx":"19","C:\\Users\\black\\Documents\\Programming\\Acumen-Developers\\Web\\snagged\\src\\components\\modal.component.jsx":"20","C:\\Users\\black\\Documents\\Programming\\Acumen-Developers\\Web\\snagged\\src\\components\\verify-authForm.js":"21","C:\\Users\\black\\Documents\\Programming\\Acumen-Developers\\Web\\snagged\\src\\services\\firebase.js":"22","C:\\Users\\black\\Documents\\Programming\\Acumen-Developers\\Web\\snagged\\src\\components\\map.component.jsx":"23","C:\\Users\\black\\Documents\\Programming\\Acumen-Developers\\Web\\snagged\\src\\App.js":"24","C:\\Users\\black\\Documents\\Programming\\Acumen-Developers\\Web\\snagged\\src\\pages\\message.page.jsx":"25","C:\\Users\\black\\Documents\\Programming\\Acumen-Developers\\Web\\snagged\\src\\pages\\search.page.jsx":"26","C:\\Users\\black\\Documents\\Programming\\Acumen-Developers\\Web\\snagged\\src\\redux\\user\\user.reducers.js":"27","C:\\Users\\black\\Documents\\Programming\\Acumen-Developers\\Web\\snagged\\src\\components\\custom-header.component.jsx":"28","C:\\Users\\black\\Documents\\Programming\\Acumen-Developers\\Web\\snagged\\src\\data\\hobbies.js":"29","C:\\Users\\black\\Documents\\Programming\\Acumen-Developers\\Web\\snagged\\src\\redux\\rootReducer.js":"30","C:\\Users\\black\\Documents\\Programming\\Acumen-Developers\\Web\\snagged\\src\\components\\footer.component.jsx":"31","C:\\Users\\black\\Documents\\Programming\\Acumen-Developers\\Web\\snagged\\src\\components\\start-up.component.jsx":"32","C:\\Users\\black\\Documents\\Programming\\Acumen-Developers\\Web\\snagged\\src\\pages\\home.page.jsx":"33","C:\\Users\\black\\Documents\\Programming\\Acumen-Developers\\Web\\snagged\\src\\components\\image-upload-card.component.jsx":"34","C:\\Users\\black\\Documents\\Programming\\Acumen-Developers\\Web\\snagged\\src\\components\\image-upload-modal.component.jsx":"35","C:\\Users\\black\\Documents\\Programming\\Acumen-Developers\\Web\\snagged\\src\\components\\sort.component.jsx":"36","C:\\Users\\black\\Documents\\Programming\\Acumen-Developers\\Web\\snagged\\src\\components\\filter.component.jsx":"37","C:\\Users\\black\\Documents\\Programming\\Acumen-Developers\\Web\\snagged\\src\\components\\custom-button.component.jsx":"38","C:\\Users\\black\\Documents\\Programming\\Acumen-Developers\\Web\\snagged\\src\\pages\\registration\\user-preference.page.jsx":"39","C:\\Users\\black\\Documents\\Programming\\Acumen-Developers\\Web\\snagged\\src\\components\\card-list.component.jsx":"40","C:\\Users\\black\\Documents\\Programming\\Acumen-Developers\\Web\\snagged\\src\\pages\\registration\\auth.page.jsx":"41","C:\\Users\\black\\Documents\\Programming\\Acumen-Developers\\Web\\snagged\\src\\redux\\users\\users.action.js":"42","C:\\Users\\black\\Documents\\Programming\\Acumen-Developers\\Web\\snagged\\src\\redux\\users\\users.reducers.js":"43","C:\\Users\\black\\Documents\\Programming\\Acumen-Developers\\Web\\snagged\\src\\components\\card.component.jsx":"44","C:\\Users\\black\\Documents\\Programming\\Acumen-Developers\\Web\\snagged\\src\\components\\gallery.component.jsx":"45","C:\\Users\\black\\Documents\\Programming\\Acumen-Developers\\Web\\snagged\\src\\components\\user.component.jsx":"46","C:\\Users\\black\\Documents\\Programming\\Acumen-Developers\\Web\\snagged\\src\\components\\filter-modal.component.jsx":"47","C:\\Users\\black\\Documents\\Programming\\Acumen-Developers\\Web\\snagged\\src\\redux\\users\\users.utils.js":"48","C:\\Users\\black\\Documents\\Programming\\Acumen-Developers\\Web\\snagged\\src\\components\\chat.component.jsx":"49","C:\\Users\\black\\Documents\\Programming\\Acumen-Developers\\Web\\snagged\\src\\components\\authform.component.jsx":"50","C:\\Users\\black\\Documents\\Programming\\Acumen-Developers\\Web\\snagged\\src\\components\\chat-messaging.component.jsx":"51","C:\\Users\\black\\Documents\\Programming\\Acumen-Developers\\Web\\snagged\\src\\redux\\user\\user.utils.js":"52","C:\\Users\\black\\Documents\\Programming\\Acumen-Developers\\Web\\snagged\\src\\components\\help.component.jsx":"53","C:\\Users\\black\\Documents\\Programming\\Acumen-Developers\\Web\\snagged\\src\\pages\\help.page.jsx":"54","C:\\Users\\black\\Documents\\Programming\\Acumen-Developers\\Web\\snagged\\src\\components\\chatbot\\message-parser.js":"55","C:\\Users\\black\\Documents\\Programming\\Acumen-Developers\\Web\\snagged\\src\\components\\chatbot\\config.js":"56","C:\\Users\\black\\Documents\\Programming\\Acumen-Developers\\Web\\snagged\\src\\components\\chatbot\\action-provider.js":"57","C:\\Users\\black\\Documents\\Programming\\Acumen-Developers\\Web\\snagged\\src\\pages\\admin\\admin.jsx":"58","C:\\Users\\black\\Documents\\Programming\\Acumen-Developers\\Web\\snagged\\src\\pages\\admin\\admin-home.page.jsx":"59","C:\\Users\\black\\Documents\\Programming\\Acumen-Developers\\Web\\snagged\\src\\redux\\users\\users.selector.js":"60","C:\\Users\\black\\Documents\\Programming\\Acumen-Developers\\Web\\snagged\\src\\components\\admin\\admin-left-nav.component.jsx":"61","C:\\Users\\black\\Documents\\Programming\\Acumen-Developers\\Web\\snagged\\src\\pages\\admin\\admin-messages.page.jsx":"62","C:\\Users\\black\\Documents\\Programming\\Acumen-Developers\\Web\\snagged\\src\\pages\\admin\\users.page.jsx":"63","C:\\Users\\black\\Documents\\Programming\\Acumen-Developers\\Web\\snagged\\src\\components\\pre-chat-component.jsx":"64","C:\\Users\\black\\Documents\\Programming\\Acumen-Developers\\Web\\snagged\\src\\pages\\user-preferences.component.jsx":"65","C:\\Users\\black\\Documents\\Programming\\Acumen-Developers\\Web\\snagged\\src\\data\\matchQuestions.js":"66","C:\\Users\\black\\Documents\\Programming\\Acumen-Developers\\Web\\snagged\\src\\data\\firstQuestions.js":"67"},{"size":5240,"mtime":1611824500242,"results":"68","hashOfConfig":"69"},{"size":6883,"mtime":1611818838773,"results":"70","hashOfConfig":"69"},{"size":11492,"mtime":1611322043877,"results":"71","hashOfConfig":"69"},{"size":3669,"mtime":1608322699610,"results":"72","hashOfConfig":"69"},{"size":2067,"mtime":1611377178721,"results":"73","hashOfConfig":"69"},{"size":1084,"mtime":1610400387479,"results":"74","hashOfConfig":"69"},{"size":2126,"mtime":1608086444794,"results":"75","hashOfConfig":"69"},{"size":8219,"mtime":1608476259726,"results":"76","hashOfConfig":"69"},{"size":3320,"mtime":1608343236886,"results":"77","hashOfConfig":"69"},{"size":500,"mtime":1607026426723,"results":"78","hashOfConfig":"69"},{"size":688,"mtime":1608262362809,"results":"79","hashOfConfig":"69"},{"size":362,"mtime":1607026426723,"results":"80","hashOfConfig":"69"},{"size":3132,"mtime":1611810054279,"results":"81","hashOfConfig":"69"},{"size":871,"mtime":1611389438527,"results":"82","hashOfConfig":"69"},{"size":7636,"mtime":1610405344695,"results":"83","hashOfConfig":"69"},{"size":377,"mtime":1607968797045,"results":"84","hashOfConfig":"69"},{"size":403,"mtime":1611374521207,"results":"85","hashOfConfig":"69"},{"size":18105,"mtime":1611389290413,"results":"86","hashOfConfig":"69"},{"size":1117,"mtime":1608085185750,"results":"87","hashOfConfig":"69"},{"size":1585,"mtime":1613496597221,"results":"88","hashOfConfig":"69"},{"size":1140,"mtime":1608324555896,"results":"89","hashOfConfig":"69"},{"size":1687,"mtime":1611818838773,"results":"90","hashOfConfig":"69"},{"size":5432,"mtime":1608266482303,"results":"91","hashOfConfig":"69"},{"size":515,"mtime":1611430305815,"results":"92","hashOfConfig":"69"},{"size":436,"mtime":1613505714005,"results":"93","hashOfConfig":"69"},{"size":6202,"mtime":1613507871702,"results":"94","hashOfConfig":"69"},{"size":1661,"mtime":1611322043877,"results":"95","hashOfConfig":"69"},{"size":1458,"mtime":1608163896624,"results":"96","hashOfConfig":"69"},{"size":3873,"mtime":1607468614221,"results":"97","hashOfConfig":"69"},{"size":484,"mtime":1611373502040,"results":"98","hashOfConfig":"69"},{"size":358,"mtime":1607121042366,"results":"99","hashOfConfig":"69"},{"size":347,"mtime":1607707219858,"results":"100","hashOfConfig":"69"},{"size":433,"mtime":1607627437306,"results":"101","hashOfConfig":"102"},{"size":1973,"mtime":1608335209149,"results":"103","hashOfConfig":"69"},{"size":5066,"mtime":1608342224858,"results":"104","hashOfConfig":"69"},{"size":2125,"mtime":1611394449127,"results":"105","hashOfConfig":"69"},{"size":1057,"mtime":1613499085141,"results":"106","hashOfConfig":"69"},{"size":554,"mtime":1611308685331,"results":"107","hashOfConfig":"69"},{"size":9390,"mtime":1608472895432,"results":"108","hashOfConfig":"69"},{"size":979,"mtime":1611379868728,"results":"109","hashOfConfig":"69"},{"size":392,"mtime":1607441669325,"results":"110","hashOfConfig":"69"},{"size":1774,"mtime":1611374521208,"results":"111","hashOfConfig":"69"},{"size":671,"mtime":1611375502488,"results":"112","hashOfConfig":"69"},{"size":8164,"mtime":1611810054278,"results":"113","hashOfConfig":"69"},{"size":1741,"mtime":1608093908836,"results":"114","hashOfConfig":"69"},{"size":9244,"mtime":1610403541702,"results":"115","hashOfConfig":"69"},{"size":9631,"mtime":1611376034052,"results":"116","hashOfConfig":"69"},{"size":3879,"mtime":1611394284058,"results":"117","hashOfConfig":"69"},{"size":4447,"mtime":1608479712361,"results":"118","hashOfConfig":"69"},{"size":1854,"mtime":1608085689377,"results":"119","hashOfConfig":"69"},{"size":5712,"mtime":1611811188949,"results":"120","hashOfConfig":"69"},{"size":3094,"mtime":1613495013731,"results":"121","hashOfConfig":"69"},{"size":2223,"mtime":1611332316323,"results":"122","hashOfConfig":"69"},{"size":186,"mtime":1611309518699,"results":"123","hashOfConfig":"69"},{"size":225,"mtime":1611323074894,"results":"124","hashOfConfig":"69"},{"size":2400,"mtime":1611331473636,"results":"125","hashOfConfig":"69"},{"size":281,"mtime":1611323100550,"results":"126","hashOfConfig":"69"},{"size":816,"mtime":1611824064444,"results":"127","hashOfConfig":"69"},{"size":304,"mtime":1611823533506,"results":"128","hashOfConfig":"69"},{"size":373,"mtime":1611375076717,"results":"129","hashOfConfig":"69"},{"size":1214,"mtime":1611824703233,"results":"130","hashOfConfig":"69"},{"size":240,"mtime":1611823533508,"results":"131","hashOfConfig":"69"},{"size":206,"mtime":1611823533506,"results":"132","hashOfConfig":"69"},{"size":3030,"mtime":1613500310652,"results":"133","hashOfConfig":"69"},{"size":9193,"mtime":1613616819064,"results":"134","hashOfConfig":"69"},{"size":1277,"mtime":1613614406568,"results":"135","hashOfConfig":"69"},{"size":1342,"mtime":1613505382365,"results":"136","hashOfConfig":"69"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},"1s4kwrz",{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"139"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"139"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"139"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"139"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"139"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"139"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"211"},"1xpeuxo",{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"139"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"139"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"139"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"139"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"139"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245","usedDeprecatedRules":"139"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"248","usedDeprecatedRules":"139"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"251","usedDeprecatedRules":"139"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"258","usedDeprecatedRules":"139"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"261","usedDeprecatedRules":"139"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"274","usedDeprecatedRules":"139"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"279","usedDeprecatedRules":"139"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\black\\Documents\\Programming\\Acumen-Developers\\Web\\snagged\\src\\components\\navigation.component.jsx",[],["292","293"],"C:\\Users\\black\\Documents\\Programming\\Acumen-Developers\\Web\\snagged\\src\\MainRoute.js",["294"],"import React  from 'react'\r\nimport { Route, Switch, withRouter } from 'react-router-dom';\r\nimport './assets/sass/main.scss'\r\nimport Navigation from './components/navigation.component';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport Footer from './components/footer.component';\r\nimport { analytics, auth , createUserDocument} from './services/firebase';\r\nimport { connect } from 'react-redux'\r\nimport { setCurrentUser , checkUserOnlineStatus, setUserRegistrationStatus } from './redux/user/user.actions';\r\nimport RegistrationRoutes from './pages/registration/registration.routes';\r\nimport {ProtectedRoute, AdminRoute} from './components/protected-route.component';\r\nimport StartUp from './components/start-up.component';\r\nimport MessagePage from './pages/message.page';\r\nimport SubscriptionPage from './pages/subscription.page';\r\nimport ProfilePage from './pages/profile.page';\r\nimport SearchPage from './pages/search.page';\r\nimport { setAllUsers } from './redux/users/users.action';\r\nimport { ChatButtonWithRedux } from './components/chat.component';\r\nimport PropTypes from 'prop-types';\r\nimport HelpPage from './pages/help.page';\r\nimport Admin from './pages/admin/admin';\r\n\r\n\r\nexport class MainRoute extends React.PureComponent {\r\n    \r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            appLoaded: false,\r\n            drop: false\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        analytics.setCurrentScreen(window.location.pathname)\r\n        analytics.logEvent('screen_view')\r\n        const { history, setCurrentUser,  setUserRegistrationStatus} = this.props\r\n        window.addEventListener(\"focus\", this.onFocus)\r\n        this.unsubscribe = auth.onAuthStateChanged(async user => {\r\n            try {\r\n                if (user) {\r\n                    const userData = await createUserDocument(user)\r\n                    if (!userData.fullyRegistered) {\r\n                        setUserRegistrationStatus(false)\r\n                        setCurrentUser({})\r\n\r\n                        this.setState((prevState) => ({\r\n                            ...prevState,\r\n                            appLoaded: true\r\n                        }))\r\n                        history.push(userData.nextRoute)\r\n                        return;\r\n                    }else{\r\n                        setCurrentUser(userData)\r\n                        setUserRegistrationStatus(true)\r\n                        history.push('/')\r\n                    }\r\n                } else {\r\n                    setCurrentUser({})\r\n                }\r\n                this.setState((prevState) =>({\r\n                    ...prevState,\r\n                    appLoaded: true\r\n                }))\r\n\r\n            } catch (error) {\r\n                this.setState((prevState) => ({\r\n                    ...prevState,\r\n                    appLoaded: true\r\n                }))\r\n                console.log(error)\r\n            }\r\n\r\n        })\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.unsubscribe()\r\n        window.removeEventListener(\"focus\", this.onFocus)\r\n        checkUserOnlineStatus()\r\n    }\r\n\r\n    onFocus = () =>{\r\n        console.log('changed focus')\r\n    }\r\n\r\n    \r\n\r\n    render() {\r\n        const {  user, fullyRegistered, setCurrentUser } = this.props\r\n        \r\n        const {appLoaded} = this.state\r\n        return (\r\n            !this.state.appLoaded ?\r\n                <StartUp /> :\r\n                <main>\r\n                    <ToastContainer\r\n                        position=\"top-center\"\r\n                        autoClose={3000}\r\n                        hideProgressBar={false}\r\n                        newestOnTop={false}\r\n                        closeOnClick\r\n                        rtl={false}\r\n                        pauseOnFocusLoss\r\n                        draggable\r\n                        pauseOnHover\r\n                    />\r\n                    <Navigation \r\n                        isAuthenticated={user.isAuthenticated} \r\n                        user={user}\r\n                        setCurrentUser={setCurrentUser}\r\n                        currentUser={user.currentUser} \r\n                        fullyRegistered={user.fullyRegistered} />\r\n                    <Switch>\r\n\r\n                        <Route path='/auth'\r\n                            render={(props) => <RegistrationRoutes {...props} isAuthenticated={user.isAuthenticated} />}\r\n                        />\r\n                        <Route path='/help' component={HelpPage}/>\r\n                        <ProtectedRoute\r\n                            exact\r\n                            path='/messages'\r\n                            fullyRegistered={fullyRegistered}\r\n                            currentUser={user.currentUser}\r\n                            isAuthenticated={user.isAuthenticated} component={MessagePage} />\r\n                        <ProtectedRoute\r\n                            exact\r\n                            path='/profile/:userId'\r\n                            currentUser={user.currentUser}\r\n                            fullyRegistered={fullyRegistered}\r\n                            isAuthenticated={user.isAuthenticated}\r\n                            component={ProfilePage} />\r\n                        <ProtectedRoute\r\n                            exact\r\n                            path='/'\r\n                            fullyRegistered={fullyRegistered}\r\n                            currentUser={user.currentUser}\r\n                            isAuthenticated={user.isAuthenticated}\r\n                            component={SearchPage} />\r\n                        <ProtectedRoute\r\n                            currentUser={user.currentUser}\r\n                            fullyRegistered={fullyRegistered}\r\n                            isAuthenticated={user.isAuthenticated}\r\n                            path='/subscription'\r\n                            component={SubscriptionPage} />\r\n                        <AdminRoute\r\n                            currentUser={user.currentUser}\r\n                            isAuthenticated={user.isAuthenticated}\r\n                            path='/admin'\r\n                            component={Admin} />\r\n                    </Switch>\r\n                    {user.isAuthenticated &&\r\n                        <ChatButtonWithRedux />\r\n                    }\r\n                    <Footer />\r\n                </main>\r\n        )\r\n    }\r\n}\r\n\r\nMainRoute.propTypes ={\r\n    user: PropTypes.object,\r\n    setCurrentUser: PropTypes.func,\r\n    setAllUsers : PropTypes.func\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    user: state.user,\r\n    fullyRegistered: state.user.fullyRegistered\r\n\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    setCurrentUser,\r\n    setAllUsers,\r\n    setUserRegistrationStatus\r\n    \r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(MainRoute))\r\n\r\n","C:\\Users\\black\\Documents\\Programming\\Acumen-Developers\\Web\\snagged\\src\\components\\register.component.jsx",[],"C:\\Users\\black\\Documents\\Programming\\Acumen-Developers\\Web\\snagged\\src\\components\\login.component.jsx",[],"C:\\Users\\black\\Documents\\Programming\\Acumen-Developers\\Web\\snagged\\src\\components\\about.component.jsx",[],"C:\\Users\\black\\Documents\\Programming\\Acumen-Developers\\Web\\snagged\\src\\components\\loading.component.jsx",[],"C:\\Users\\black\\Documents\\Programming\\Acumen-Developers\\Web\\snagged\\src\\pages\\registration\\registration.routes.jsx",[],"C:\\Users\\black\\Documents\\Programming\\Acumen-Developers\\Web\\snagged\\src\\pages\\registration\\phone-number-verification.page.jsx",[],"C:\\Users\\black\\Documents\\Programming\\Acumen-Developers\\Web\\snagged\\src\\pages\\registration\\image-upload.page.jsx",[],"C:\\Users\\black\\Documents\\Programming\\Acumen-Developers\\Web\\snagged\\src\\index.js",[],"C:\\Users\\black\\Documents\\Programming\\Acumen-Developers\\Web\\snagged\\src\\redux\\store.js",[],"C:\\Users\\black\\Documents\\Programming\\Acumen-Developers\\Web\\snagged\\src\\reportWebVitals.js",[],"C:\\Users\\black\\Documents\\Programming\\Acumen-Developers\\Web\\snagged\\src\\redux\\user\\user.actions.js",["295","296"],"import { toast } from \"react-toastify\";\r\nimport { auth, f, database, firestore } from \"../../services/firebase\";\r\nimport { SET_CURRENT_USER, \r\n    SET_USER_PREFERENCE_VALUES,\r\n    SET_USER_REGISTRATION_STATUS, \r\n    SHOW_CHAT_WINDOW, \r\n    SHOW_HELP_WINDOW \r\n    } from \"../actionTypes\";\r\n\r\nexport const setCurrentUser = (user) => ({\r\n    type: SET_CURRENT_USER,\r\n    payload: user\r\n})\r\n\r\nexport const setUserPreferences = (preferences) => ({\r\n    type: SET_USER_PREFERENCE_VALUES,\r\n    payload: preferences\r\n})\r\n\r\nexport const chatWindowHandler = (showChatWindow) => ({\r\n    type: SHOW_CHAT_WINDOW,\r\n    payload: showChatWindow\r\n\r\n})\r\n\r\nexport const helpWindowHandler = (showHelpWindow) => ({\r\n    type: SHOW_HELP_WINDOW,\r\n    payload: showHelpWindow\r\n\r\n})\r\n\r\nexport const setUserRegistrationStatus = (fullyRegistered) => ({\r\n    type: SET_USER_REGISTRATION_STATUS,\r\n    payload: fullyRegistered\r\n\r\n})\r\nexport const facebookRegistration = () =>{\r\n    var provider = new f.auth.FacebookAuthProvider();\r\n    provider.addScope('email')\r\n     auth.signInWithRedirect(provider)\r\n        .then(response =>{\r\n            const token = response.credential.accessToken;\r\n            const user = response.user;\r\n        })\r\n        .catch(error =>{\r\n\r\n            toast.error(error.message)\r\n        })\r\n}\r\n\r\n\r\n\r\nexport const facebookLogin = () => {\r\n\r\n}\r\n\r\n\r\nexport const checkUserOnlineStatus = () =>{\r\n    let currentUser = auth.currentUser\r\n    if(currentUser !== null){\r\n        let uid = currentUser.uid\r\n        var userStatusDatabaseRef = database.ref('/status/' + uid);\r\n        var isOfflineForDatabase = {\r\n            state: 'offline',\r\n            last_changed: f.database.ServerValue.TIMESTAMP,\r\n        };\r\n\r\n        var isOnlineForDatabase = {\r\n            state: 'online',\r\n            last_changed: f.database.ServerValue.TIMESTAMP,\r\n        };\r\n\r\n       \r\n        database.ref('.info/connected').on('value', function (snapshot) {\r\n            if (snapshot.val() === false) {\r\n                return;\r\n            };\r\n            userStatusDatabaseRef.onDisconnect().update(isOfflineForDatabase).then(function () {\r\n                userStatusDatabaseRef.set(isOnlineForDatabase);\r\n            });\r\n        });\r\n      \r\n    }\r\n}\r\n\r\nexport const addToFavorite = async (favoredUserId) =>{\r\n    let currentUserId  = auth.currentUser.uid\r\n    const userRef = firestore.doc(`users/${currentUserId}`);\r\n            try {\r\n            await userRef.update({\r\n                favorites: f.firestore.FieldValue.arrayUnion(favoredUserId)\r\n            })\r\n        } catch (error) {\r\n            toast.error('Something went wrong. Try again later')\r\n        }\r\n    \r\n}\r\n\r\nexport const removeFromFavorite = async (favoredUserId) =>{\r\n    let currentUserId = auth.currentUser.uid\r\n    const userRef = firestore.doc(`users/${currentUserId}`);\r\n            try {\r\n            await userRef.update({\r\n                favorites: f.firestore.FieldValue.arrayRemove(favoredUserId)\r\n            })\r\n\r\n        } catch (error) {\r\n            toast.error('Something went wrong. Try again later')\r\n            console.log(error)\r\n        }\r\n    \r\n}","C:\\Users\\black\\Documents\\Programming\\Acumen-Developers\\Web\\snagged\\src\\components\\protected-route.component.jsx",["297","298","299"],"import React,{useEffect} from 'react'\r\nimport { Redirect, Route } from 'react-router-dom'\r\nimport { auth, firestore } from '../services/firebase';\r\n\r\nexport function ProtectedRoute({ component: Component, fullyRegistered, isAuthenticated, currentUser,  ...rest}) {\r\n\r\n    return (\r\n        <Route {...rest} render={(props) => (\r\n             isAuthenticated ?\r\n                <Component currentUser={currentUser} isAuthenticated={isAuthenticated} {...props} /> :\r\n                <Redirect to='/auth/register' />\r\n        )\r\n        } />\r\n    )\r\n}\r\n\r\nexport function AdminRoute({ component: Component, isAdmin, isAuthenticated, currentUser,  ...rest}) {\r\n    return (\r\n        <Route {...rest} render={(props) => (\r\n            <Component isAdmin={isAdmin} currentUser={currentUser} isAuthenticated={isAuthenticated} {...props} /> \r\n        )\r\n        } />\r\n    )\r\n}\r\n\r\n","C:\\Users\\black\\Documents\\Programming\\Acumen-Developers\\Web\\snagged\\src\\pages\\profile.page.jsx",["300","301","302","303"],"import React, { Component } from \"react\"; \r\nimport { connect } from \"react-redux\";\r\nimport { toast } from \"react-toastify\";\r\nimport CustomHeader from \"../components/custom-header.component\";\r\nimport Loading from \"../components/loading.component\";\r\nimport { database, firestore } from \"../services/firebase\";\r\nimport { BsImages } from \"react-icons/bs\";\r\nimport Gallery from \"../components/gallery.component\";\r\nimport User from \"../components/user.component\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\n\r\nclass ProfilePage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      user: null,\r\n      userId: props.match ? props.match.params.userId : null,\r\n\t  isLoading: true,\r\n\t  userPreference: null,\r\n\t  onlineStatus: null,\r\n\t  hobbies:null,\r\n\t  selectedNav: 'about'\r\n    }\r\n  }\r\n  \r\n  changeSelectedNav = (type) =>{\r\n\tthis.setState((prevState) =>({\r\n\t\t...prevState,\r\n\t\tselectedNav: type\r\n\t}))\r\n  }\r\n\r\n  async componentDidMount(){\r\n\t  const {userId, user} = this.state;\r\n\t  const { users } = this.props;\r\n\t  let userArray = [];\r\n\t  let onlineStatus= {}\r\n\t  if(userId ){\r\n\t\t  let userRecord = users.find(user => user.userId === userId)\r\n\t\t  console.log(userRecord)\r\n\t\t  if(userRecord){\r\n\t\t\t  let userPreference =  { ...userRecord.preference }\r\n\t\t\t  let userImages = [...userRecord.userImage]\r\n\t\t\t  let hobbies = [...userRecord.hobbies]\r\n\t\t\t  userRecord.timeAgo = this.getTimeAgo(userRecord.createdAt.seconds)\r\n\t\t\t//   delete userRecord.preference\r\n\t\t\t//   delete userRecord.hobbies\r\n\t\t\t//   delete userRecord.nextRoute\r\n\t\t\t//   delete userRecord.fullyRegistered\r\n\t\t\t  const statusRef = database.ref(`status`).child(userId)\r\n\t\t\t  const snapshot = await statusRef.once('value')\r\n\t\t\t  const exists = snapshot.val() !== null;\r\n\t\t\t  if (exists) {\r\n\t\t\t\t  onlineStatus = snapshot.val()\r\n\t\t\t\t  onlineStatus.lastLogin = this.getTimeAgo(onlineStatus.last_changed / 1000)\r\n\t\t\t  }\r\n\t\t\t  userArray.push({\r\n\t\t\t\t  ...userRecord,\r\n\t\t\t  })\r\n\t\t\t  this.setState((prevState) => ({\r\n\t\t\t\t  ...prevState,\r\n\t\t\t\t  user: userArray[0],\r\n\t\t\t\t  userPreference,\r\n\t\t\t\t  hobbies,\r\n\t\t\t\t  onlineStatus,\r\n\t\t\t\t  userImages,\r\n\t\t\t\t  isLoading: false\r\n\t\t\t  }))\r\n\r\n\t\t  }\r\n\t\t \r\n\t\t// const snapShot = firestore.doc(`users/${userId}`).get()\r\n\t\t// snapShot\r\n\t\t// \t.then(async(result) => {\r\n\t\t// \t\tif(result.exists){\r\n\t\t// \t\t\tlet userRecord =  {...result.data()}\r\n\t\t// \t\t\tlet createdAt = userRecord.createdAt.toDate().toDateString()\r\n\t\t// \t\t\tlet age = this.getAge(userRecord.birth)\r\n\t\t// \t\t\tlet userPreference = {...userRecord.preference}\r\n\t\t// \t\t\tlet userImages = [...userRecord.userImage ]\r\n\t\t// \t\t\tlet hobbies = [...userRecord.hobbies]\r\n\t\t// \t\t\tuserRecord.timeAgo = this.getTimeAgo(userRecord.createdAt.seconds)\r\n\t\t// \t\t\tdelete userRecord.email\r\n\t\t// \t\t\tdelete userRecord.birth\r\n\t\t// \t\t\tdelete userRecord.createdAt\r\n\t\t// \t\t\tdelete userRecord.preference\r\n\t\t// \t\t\tdelete userRecord.userImage\r\n\t\t// \t\t\tdelete userRecord.hobbies\r\n\t\t// \t\t\tdelete userRecord.nextRoute\r\n\t\t// \t\t\tdelete userRecord.fullyRegistered\r\n\t\t// \t\t\tconst statusRef = database.ref(`status`).child(userId)\r\n\t\t// \t\t\tconst snapshot = await statusRef.once('value')\r\n\t\t// \t\t\tconst exists = snapshot.val() !== null;\r\n\t\t// \t\t\tif (exists) {\r\n\t\t// \t\t\t\tonlineStatus = snapshot.val()\r\n\t\t// \t\t\t\tonlineStatus.lastLogin = this.getTimeAgo(onlineStatus.last_changed /1000)\r\n\t\t// \t\t\t}\r\n\t\t// \t\t\tuser.push({\r\n\t\t// \t\t\t\t...userRecord,\r\n\t\t// \t\t\t\tcreatedAt,\r\n\t\t// \t\t\t\tage,\r\n\t\t// \t\t\t\tuserId\r\n\t\t// \t\t\t})\r\n\t\t// \t\t\tthis.setState((prevState) => ({\r\n\t\t// \t\t\t\t...prevState,\r\n\t\t// \t\t\t\tuser: user[0],\r\n\t\t// \t\t\t\tuserPreference,\r\n\t\t// \t\t\t\thobbies,\r\n\t\t// \t\t\t\tonlineStatus,\r\n\t\t// \t\t\t\tuserImages,\r\n\t\t// \t\t\t\tisLoading: false\r\n\t\t// \t\t\t}))\r\n\t\t// \t\t}\r\n\t\t// \t})\r\n\t\t// \t.catch((error) => {\r\n\t\t// \t\ttoast.error(error.message)\r\n\t\t// \t})\r\n\t  }\r\n\t  \r\n  }\r\n\r\n\tgetAge(birth) {\r\n\t\tconst today = new Date();\r\n\t\tconst birthDate = new Date(birth)\r\n\t\tlet year = today.getFullYear() - birthDate.getFullYear()\r\n\t\tconst month = today.getFullYear() - birthDate.getFullYear()\r\n\t\tif (month < 0 ||\r\n\t\t\t(month === 0 && today.getDate() < birthDate.getDate())) {\r\n\t\t\tyear--;\r\n\t\t}\r\n\r\n\t\treturn year\r\n\r\n\t}\r\n\r\n\ttimeAgo(s) {\r\n\t\tif (s === 1) {\r\n\t\t\treturn ' ago'\r\n\t\t} else {\r\n\t\t\treturn 's ago'\r\n\t\t}\r\n\t}\r\n\r\n \tgetTimeAgo(seconds) {\r\n\t\tlet microsecond = seconds * 1000;\r\n\t\tlet secondsDifference = (Math.floor(Date.now() - microsecond) / 1000)\r\n\t\tlet interval = Math.floor(secondsDifference / 31536000)\r\n\t\tif (interval > 1) {\r\n\t\t\treturn interval + ' year' + this.timeAgo(interval)\r\n\t\t}\r\n\r\n\t\tinterval = Math.floor(secondsDifference / 2628003)\r\n\t\tif (interval > 1) {\r\n\t\t\treturn interval + ' month' + this.timeAgo(interval)\r\n\t\t}\r\n\r\n\t\tinterval = Math.floor(secondsDifference / 86400)\r\n\t\tif (interval > 1) {\r\n\t\t\treturn interval + ' day' + this.timeAgo(interval)\r\n\t\t}\r\n\r\n\t\tinterval = Math.floor(secondsDifference / 3600)\r\n\t\tif (interval > 1) {\r\n\t\t\treturn interval + ' hour' + this.timeAgo(interval)\r\n\t\t}\r\n\r\n\t\tinterval = Math.floor(secondsDifference / 60)\r\n\t\tif (interval > 1) {\r\n\t\t\treturn interval + ' minute' + this.timeAgo(interval)\r\n\t\t}\r\n\r\n\t\treturn Math.floor(secondsDifference) + ' second' + this.timeAgo(interval)\r\n\r\n\r\n\r\n\t}\r\n\r\n\r\n  render() {\r\n\t  const {isLoading, user, selectedNav, hobbies, userImages, onlineStatus} = this.state;\r\n\t  const { currentUser } = this.props\r\n\r\n    return (\r\n\t\t<div className='profile-page'>\r\n\t\t\t{(isLoading && !user) ? <Loading /> :\r\n\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t<CustomHeader title='profile' link={`profile/${user.username}`} path={`profile/${user.userId}`} />\r\n\t\t\t\t\t<section className='profile'>\r\n\t\t\t\t\t\t<div className='profile__cover'>\r\n\t\t\t\t\t\t\t<div className='profile__avatar'>\r\n\t\t\t\t\t\t\t\t<img src={userImages[0]} alt={user.username} />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<h3 className='header-tertiary'>\r\n\t\t\t\t\t\t\t\t<span className='username'>\r\n\t\t\t\t\t\t\t\t\t{user.username}\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t<span className='age'>\r\n\t\t\t\t\t\t\t\t\t{user.age} years\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='button-container'>\r\n\t\t\t\t\t\t\t<NavLink to='/' className='button button--edit-images' activeClassName={null} >\r\n\t\t\t\t\t\t\t\tEdit Images\r\n\t\t\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t\t\t<NavLink to='/' className='button button--edit-profile' activeClassName={null}>\r\n\t\t\t\t\t\t\t\tEdit Profile\r\n\t\t\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t\t\t<NavLink to='/' className='button button--edit-preferences' activeClassName={null}>\r\n\t\t\t\t\t\t\t\tEdit Preferences\r\n\t\t\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<nav className='profile__nav'>\r\n\t\t\t\t\t\t\t<ul className='profile__nav__list'>\r\n\t\t\t\t\t\t\t\t<li\r\n\t\t\t\t\t\t\t\t\tclassName='profile__nav__item'\r\n\t\t\t\t\t\t\t\t\tonClick={() => this.changeSelectedNav('about')}\r\n\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\tbackgroundColor: selectedNav === 'about' ? 'green' : 'transparent'\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tAbout\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<li\r\n\t\t\t\t\t\t\t\t\tclassName='profile__nav__item'\r\n\t\t\t\t\t\t\t\t\tonClick={() => this.changeSelectedNav('images')}\r\n\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\tbackgroundColor: selectedNav === 'images' ? 'green' : 'transparent'\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tImages\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t</nav>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t{selectedNav === 'images' &&\r\n\t\t\t\t\t\t\t<Gallery photos={userImages} isCurrentUser={\r\n\t\t\t\t\t\t\t\tuser.userId === currentUser.userId\r\n\t\t\t\t\t\t\t} />\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t{selectedNav === 'about' &&\r\n\t\t\t\t\t\t\t<User \r\n\t\t\t\t\t\t\t\tuserData={user} \r\n\t\t\t\t\t\t\t\thobbies={hobbies} \r\n\t\t\t\t\t\t\t\tonlineStatus={onlineStatus}\r\n\t\t\t\t\t\t\t\tisCurrentUser={\r\n\t\t\t\t\t\t\t\tuser.userId === currentUser.userId\r\n\t\t\t\t\t\t\t} />\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</section>\r\n\t\t\t</React.Fragment>\r\n  \t\t\t\t}\r\n\t\t</div>\r\n    );\r\n  }\r\n}\r\n \r\nconst mapStateToProps = (state) => ({\r\n\tusers : state.users.users\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n\t\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProfilePage);","C:\\Users\\black\\Documents\\Programming\\Acumen-Developers\\Web\\snagged\\src\\pages\\subscription.page.jsx",[],"C:\\Users\\black\\Documents\\Programming\\Acumen-Developers\\Web\\snagged\\src\\redux\\actionTypes.js",[],"C:\\Users\\black\\Documents\\Programming\\Acumen-Developers\\Web\\snagged\\src\\pages\\registration\\user-info.page.jsx",[],"C:\\Users\\black\\Documents\\Programming\\Acumen-Developers\\Web\\snagged\\src\\components\\header.component.jsx",[],"C:\\Users\\black\\Documents\\Programming\\Acumen-Developers\\Web\\snagged\\src\\components\\modal.component.jsx",["304"],"import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport React from 'react'\r\nimport {\r\n    faCheck,\r\n    faCheckCircle,\r\n    faTimes\r\n} from '@fortawesome/free-solid-svg-icons';\r\n\r\nexport default function Modal({\r\n    title,\r\n    children,\r\n    hideCloseButton=false,\r\n    hideOkButton=false,\r\n    isLoading=false,\r\n    subHeader=null,\r\n    closeHandler=f=>f,\r\n    submitHandler=f=>f\r\n}) {\r\n    return (\r\n        <div className=\"modal\">\r\n            <div className='modal__content'>\r\n                <div className='modal__header'>\r\n                    <h2 className='header-secondary'>\r\n                        {title}\r\n                    </h2>\r\n                    {subHeader&&\r\n                        subHeader\r\n                    }\r\n                    {!hideCloseButton &&\r\n                        <div className='close-button' onClick={closeHandler}>\r\n                            <FontAwesomeIcon icon={faTimes}  />\r\n                        </div>\r\n                    }\r\n                    {!hideOkButton &&\r\n                        <div className='ok-button' onClick={submitHandler}>\r\n                            <FontAwesomeIcon icon={faCheck} />\r\n                        </div>\r\n                    }\r\n                    \r\n                </div>\r\n                    <div className='modal__body'>\r\n                        {isLoading ? \r\n                        <div className='modal__body--loading' /> :\r\n                            children\r\n                        }\r\n                    </div>          \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\black\\Documents\\Programming\\Acumen-Developers\\Web\\snagged\\src\\components\\verify-authForm.js",[],"C:\\Users\\black\\Documents\\Programming\\Acumen-Developers\\Web\\snagged\\src\\services\\firebase.js",[],"C:\\Users\\black\\Documents\\Programming\\Acumen-Developers\\Web\\snagged\\src\\components\\map.component.jsx",["305"],"import React, { Component } from 'react';\r\nimport GoogleMapReact from 'google-map-react';\r\nimport Modal from './modal.component';\r\nimport Geocode from \"react-geocode\";\r\nimport { toast } from 'react-toastify';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst GOOGLE_MAP =  'AIzaSyDeOxqblHXARo7CFztvJD7Rmh9VfNoZARU'\r\n//process.env.REACT_APP_GOOGLE_MAP_API\r\nGeocode.setApiKey(GOOGLE_MAP);\r\nconst AnyReactComponent = ({ text }) => (\r\n    <div style={{\r\n        color: 'white',\r\n        background: 'grey',\r\n        padding: '15px 10px',\r\n        display: 'inline-flex',\r\n        textAlign: 'center',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        borderRadius: '100%',\r\n        transform: 'translate(-50%, -50%)'\r\n    }}>\r\n        {text}\r\n    </div>\r\n);\r\n\r\nclass SimpleMap extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            isLoading: true,\r\n            title: 'Pick place(s)',\r\n            chosenPlaces: [],\r\n            center: {\r\n                lat: 59.95,\r\n                lng: 30.33\r\n            },\r\n            zoom: 8\r\n        }\r\n    }\r\n\r\n\r\n    \r\n    componentDidMount(){\r\n        try {\r\n            if (navigator.geolocation) {\r\n                navigator.geolocation.getCurrentPosition((position) => {\r\n                    var pos = {\r\n                        lat: position.coords.latitude,\r\n                        lng: position.coords.longitude\r\n                    };\r\n                    this.setState((prevState) => ({\r\n                        center: pos,\r\n                        isLoading: false\r\n                    })\r\n                    )\r\n                })\r\n            }\r\n        } catch (error) {   \r\n            toast.error(error)\r\n        }\r\n       \r\n    }\r\n\r\n    \r\n\r\n\r\n    removeAddressHandler = (e) =>{\r\n        const id = e.target.parentNode.id || e.target.parentNode.parentNode.id.toString()\r\n        let places = [...this.state.chosenPlaces]\r\n        places = places.filter(place => {\r\n            return place.city.trim().toLowerCase() !== id.trim().toLowerCase()\r\n        })\r\n        console.log(places)\r\n        this.setState((prevState) => ({\r\n            ...prevState,\r\n            chosenPlaces: places,\r\n        })\r\n        )\r\n    }\r\n    onMapChange = (e) => {\r\n        try {\r\n            const { lat, lng } = e\r\n            var pos = {\r\n                lat,\r\n                lng\r\n            };\r\n            const coord = pos\r\n            Geocode.fromLatLng(lat, lng).then(\r\n                response => {\r\n                    const address = response.results[0].formatted_address;\r\n                    let city = address.split(',')\r\n                    city = city[city.length - 3]\r\n                    this.setState((prevState) => ({\r\n                            ...prevState,\r\n                            chosenPlaces: [...prevState.chosenPlaces, {\r\n                                city,\r\n                                coord\r\n                            }],\r\n                        })\r\n                    )\r\n                },\r\n                error => {\r\n                    console.error(error);\r\n                    throw new Error(error)\r\n                }\r\n            );\r\n        } catch (error) {\r\n            toast.error('Something went wrong try again later')\r\n        }\r\n        \r\n    }\r\n\r\n    onSubmit = () =>{\r\n        const {chosenPlaces } = this.state;\r\n        this.props.onCloseModal(chosenPlaces)\r\n    }\r\n\r\n    render() {\r\n        let placesList = null;\r\n        const { onCloseModal} = this.props;\r\n        const {center, zoom, isLoading, title, chosenPlaces} = this.state;\r\n        if (chosenPlaces.length > 0){\r\n            placesList = chosenPlaces.map((place, index) => (\r\n                <div className='place' key={index} id={place.city.trim()}>\r\n                    {place.city}\r\n                    <FontAwesomeIcon icon={faTimes} color='white' className='cancel' onClick={this.removeAddressHandler} />\r\n\r\n                </div>\r\n            ))\r\n            placesList = (\r\n\r\n                <div className='places'>\r\n                    {placesList}\r\n\r\n                </div>\r\n            )\r\n        }\r\n       \r\n\r\n\r\n        return (\r\n            <Modal \r\n                title={title} \r\n                closeHandler={() => this.props.onCloseModal()} \r\n                isLoading={isLoading} \r\n                submitHandler={this.onSubmit}\r\n                subHeader={placesList} >\r\n                <div style={{ height: '100vh', width: '100%' }}>\r\n                    <GoogleMapReact\r\n                        bootstrapURLKeys={{ key: GOOGLE_MAP}}\r\n                        defaultCenter={center}\r\n                        defaultZoom={zoom}\r\n                        onClick={this.onMapChange}>  \r\n                        {\r\n                            chosenPlaces.length > 0 && chosenPlaces.map((place) => (\r\n                                <AnyReactComponent\r\n                                    lat={place.coord.lat}\r\n                                    lng={place.coord.lng}\r\n                                    text={'Chosen Place'}\r\n                                />\r\n                            ))\r\n                        }\r\n                        \r\n                    </GoogleMapReact>\r\n                </div>\r\n            </Modal>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default SimpleMap;","C:\\Users\\black\\Documents\\Programming\\Acumen-Developers\\Web\\snagged\\src\\App.js",[],"C:\\Users\\black\\Documents\\Programming\\Acumen-Developers\\Web\\snagged\\src\\pages\\message.page.jsx",[],"C:\\Users\\black\\Documents\\Programming\\Acumen-Developers\\Web\\snagged\\src\\pages\\search.page.jsx",[],"C:\\Users\\black\\Documents\\Programming\\Acumen-Developers\\Web\\snagged\\src\\redux\\user\\user.reducers.js",[],"C:\\Users\\black\\Documents\\Programming\\Acumen-Developers\\Web\\snagged\\src\\components\\custom-header.component.jsx",[],"C:\\Users\\black\\Documents\\Programming\\Acumen-Developers\\Web\\snagged\\src\\data\\hobbies.js",[],"C:\\Users\\black\\Documents\\Programming\\Acumen-Developers\\Web\\snagged\\src\\redux\\rootReducer.js",[],"C:\\Users\\black\\Documents\\Programming\\Acumen-Developers\\Web\\snagged\\src\\components\\footer.component.jsx",[],"C:\\Users\\black\\Documents\\Programming\\Acumen-Developers\\Web\\snagged\\src\\components\\start-up.component.jsx",[],"C:\\Users\\black\\Documents\\Programming\\Acumen-Developers\\Web\\snagged\\src\\pages\\home.page.jsx",["306"],"import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport CustomHeader from '../components/custom-header.component'\r\n\r\nexport class HomePage extends Component {\r\n    static propTypes = {\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='home-page'>\r\n                <CustomHeader title='Home' link='home/home' />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default HomePage\r\n",["307","308"],"C:\\Users\\black\\Documents\\Programming\\Acumen-Developers\\Web\\snagged\\src\\components\\image-upload-card.component.jsx",[],"C:\\Users\\black\\Documents\\Programming\\Acumen-Developers\\Web\\snagged\\src\\components\\image-upload-modal.component.jsx",[],"C:\\Users\\black\\Documents\\Programming\\Acumen-Developers\\Web\\snagged\\src\\components\\sort.component.jsx",["309"],"import { faList, faTh } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport React, { useState , useEffect} from 'react'\r\n\r\n\r\nexport default function Sort({ displayType='grid', sortValue, setCardType, setSortOption }) {\r\n    const [state, setState] = useState(displayType)\r\n    const onChangeValue = function (event) {\r\n        setState(event.target.value)\r\n        setCardType(event.target.value)\r\n    }\r\n\r\n    return (\r\n        <div className=\"sort\">\r\n            <div className='display-type__btn-group' onChange={onChangeValue} value={state}>\r\n                <label className='display-type__btn grid' style={{\r\n                    backgroundColor: state === 'grid' ? '#046306' : ' rgb(206, 203, 203)',\r\n\r\n                }} >\r\n                    <input type='radio' value='grid' name='display-button' id='display-button' />\r\n                    <FontAwesomeIcon icon={faList} className='icon' />\r\n                </label>\r\n                <label className='display-type__btn flex' style={{\r\n                    backgroundColor: state === 'flex' ? '#046306' : ' rgb(206, 203, 203)'\r\n                }}>\r\n                    <input type='radio' value='flex' name='display-button' id='display-button' />\r\n                    <FontAwesomeIcon icon={faTh} className='icon' />\r\n                </label>\r\n            </div>\r\n            <div className='sort__options'>\r\n                <label className='sort__options--label'>\r\n                    Sort By\r\n                </label>\r\n                <select \r\n                    className='sort__options--dropdown'\r\n                    onChange={e => setSortOption(e.target.value) }\r\n                    value={sortValue}\r\n                    >\r\n                        <option value='education'>Last Online</option>\r\n                        <option value='distanceFromCurrentUser'>Nearest</option>\r\n                        <option value='secondsAgo'>Newest Joined</option>\r\n                        <option value='age'>Age</option>\r\n\r\n\r\n                    </select>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\black\\Documents\\Programming\\Acumen-Developers\\Web\\snagged\\src\\components\\filter.component.jsx",["310"],"import React, { useState } from 'react'\r\nimport CustomButton from './custom-button.component'\r\nimport { faPlusSquare } from '@fortawesome/free-regular-svg-icons'\r\nimport FilterModal from './filter-modal.component'\r\n\r\nconst filterUsers = (users, isAuthenticated, filter=null) =>{\r\n    \r\n    if (isAuthenticated){\r\n        users = users.filter(user =>(\r\n            user\r\n        ))\r\n    }\r\n\r\n    return users\r\n\r\n}\r\nexport default function Filter({user}) {\r\n    const [showModal, setShowModal] = useState(false)\r\n    let isAuthenticated = user.isAuthenticated\r\n    if(isAuthenticated){\r\n        \r\n    }\r\n    return (\r\n        <div className='filter'>\r\n            {(showModal) &&\r\n                <FilterModal \r\n                    currentUser={user.currentUser}\r\n                    setShowModal={setShowModal}\r\n                    />\r\n            }\r\n            <CustomButton\r\n                text='filter'\r\n                onClick={() => setShowModal(true)}\r\n                color='green'\r\n                icon={faPlusSquare} />\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\black\\Documents\\Programming\\Acumen-Developers\\Web\\snagged\\src\\components\\custom-button.component.jsx",[],"C:\\Users\\black\\Documents\\Programming\\Acumen-Developers\\Web\\snagged\\src\\pages\\registration\\user-preference.page.jsx",["311","312"],"import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { toast } from 'react-toastify';\r\nimport Loading from '../../components/loading.component';\r\nimport SimpleMap from '../../components/map.component';\r\nimport { setCurrentUser, setUserPreferences, setUserRegistrationStatus } from '../../redux/user/user.actions';\r\nimport { createUserDocument, firestore } from '../../services/firebase';\r\n\r\nclass UserPreferencePage extends Component {\r\n    constructor(props){\r\n        super (props);\r\n        this.state ={\r\n            loading: false,\r\n            userId: props.match ? props.match.params.userId : null,\r\n            showMapModal: false,\r\n            placesList: [],\r\n            minSlider: 18 ,\r\n            maxSlider: 60,\r\n            userData:{\r\n                gender: 'Male',\r\n                location: 'any',\r\n            }\r\n        }\r\n    }\r\n\r\n    \r\n    \r\n\r\n    onCloseModal = (places=[]) =>{\r\n        const placesList = places.map((place, index) => (\r\n            place.city\r\n        ))\r\n        this.setState((prevState) => ({\r\n            ...prevState,\r\n            showMapModal: false,\r\n            placesList\r\n        })\r\n        )\r\n    }\r\n    onInputChangeHandler = (e) => {\r\n        const { name, value } = e.target\r\n        this.setState((prevState) => ({\r\n            ...prevState,\r\n            userData: {\r\n                ...prevState.userData,\r\n                [name]: value\r\n            }\r\n        })\r\n        )\r\n    }\r\n\r\n    removePlace = (e) => {\r\n        const id = e.target.parentNode.parentNode.id || e.target.parentNode.parentNode.parentNode.id\r\n        console.log(id)\r\n        let places = [...this.state.placesList]\r\n        places = places.filter(place => {\r\n            return place.trim().toLowerCase() !== id.trim().toLowerCase()\r\n        })\r\n        this.setState((prevState) => ({\r\n            ...prevState,\r\n            placesList: places,\r\n        })\r\n        )\r\n    }\r\n\r\n    onLocationChangeHandler = (e) => {\r\n        const { name, value } = e.target\r\n        if(value === 'map'){\r\n            this.setState((prevState) => ({\r\n                ...prevState,\r\n                showMapModal: true\r\n            })\r\n            )\r\n        }else{\r\n            this.setState((prevState) => ({\r\n                ...prevState,\r\n                userData: {\r\n                    ...prevState.userData,\r\n                    [name]: value\r\n            }\r\n        })\r\n        )\r\n        }\r\n        \r\n    }\r\n\r\n    onChangeSlide = (e) =>{\r\n        const { name, value} = e.target\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n        \r\n    }\r\n\r\n  \r\n    onSubmitHandler = async (e) =>{\r\n        e.preventDefault()\r\n        const { setUserPreferences, setUserRegistrationStatus } = this.props;\r\n        this.setState((prevState) => ({\r\n            ...prevState,\r\n            loading: true\r\n        }))\r\n        try {\r\n            let location;\r\n            const { placesList, userData, minSlider, maxSlider, userId } = this.state;\r\n            if (placesList.length > 0) {\r\n                location = placesList\r\n            } else {\r\n                location = 'any'\r\n            }\r\n            if (minSlider >= maxSlider) {\r\n                toast.error('Min age cannot be greater than or equal to max age')\r\n                return;\r\n            }\r\n            const userRef = firestore.doc(`users/${userId}`)\r\n            await userRef.update({\r\n                preference:{\r\n                    age:{\r\n                        minAge: minSlider,\r\n                        maxAge:maxSlider\r\n                    },\r\n                    location,\r\n                    gender:userData.gender\r\n\r\n                },\r\n                fullyRegistered: true,\r\n                nextRoute: null\r\n            })\r\n            setUserRegistrationStatus(true)\r\n            const userDataRecord = await (await userRef.get())\r\n            setCurrentUser({\r\n                ...userDataRecord.data(),\r\n                userId\r\n            })\r\n            this.setState((prevState) => ({\r\n                ...prevState,\r\n                loading: false\r\n            }))\r\n            this.props.history.push(`/`)\r\n        } catch (error) {\r\n            this.setState((prevState) => ({\r\n                ...prevState,\r\n                loading: false\r\n            }))\r\n            toast.error(error)\r\n        }\r\n        \r\n\r\n    }\r\n    render() {\r\n        const {loading, userData, minSlider, maxSlider, showMapModal, placesList} = this.state;\r\n        \r\n        return (\r\n            <div className='user-preference-page'>\r\n                {loading && <Loading />}\r\n                {showMapModal && (\r\n                        <SimpleMap onCloseModal={this.onCloseModal}/>\r\n                )}\r\n                <form className=\"form-001\" onSubmit={this.onSubmitHandler}>\r\n                    <h2 className='about__header'>\r\n                        Your Dating Preferences\r\n                    </h2>\r\n                    <div className=\"form-001__component float-left\">\r\n                        <label className=\"form-001__label  \" htmlFor=\"gender\">Gender</label>\r\n                        <select className=\"form-001__input form-001__dropdown \"\r\n                            value={userData.gender}\r\n                            onChange={this.onInputChangeHandler}\r\n                            id=\"gender\" name=\"gender\">\r\n                            <option value=\"Male\">Male</option>\r\n                            <option value=\"Female\">Female</option>\r\n                            <option value=\"Cis Gender\">Cis gender</option>\r\n                            <option value=\"Transgender\">Transgender</option>\r\n                            <option value=\"Gender Fluid\">Gender Fluid</option>\r\n\r\n                        </select>\r\n                    </div>\r\n\r\n                    <div className=\"form-001__component-range \">\r\n                        <label className=\"form-001__label \" htmlFor=\"city\">Age Range</label>\r\n                        <div \r\n                            className=\"slide-component\" \r\n                            role=\"group\" \r\n                            style={{'--minSlider': minSlider ,'--maxSlider': maxSlider , '--min': 18,'--max': 99}}\r\n                            >\r\n                            <label className=\"sr-only\" htmlFor=\"minSlider\">Min Age:</label>\r\n                            <input \r\n                                id=\"minSlider\" \r\n                                type=\"range\"\r\n                                name='minSlider'\r\n                                min=\"18\" \r\n                                value={minSlider} max=\"99\" onChange={this.onChangeSlide} />\r\n                            <output name='Min Age' htmlFor=\"minSlider\" style={{ '--c': 'var(--minSlider)'}}></output>\r\n                            <label className=\"sr-only\" htmlFor=\"maxSlider\">Max Age:</label>\r\n                            <input id=\"maxSlider\" \r\n                                type=\"range\" \r\n                                min=\"18\" \r\n                                value={maxSlider} \r\n                                name='maxSlider'\r\n                                max=\"99\" \r\n                                onChange={this.onChangeSlide} />\r\n                            <output name='Max Age' htmlFor=\"maxSlider\" style={{ '--c': 'var(--maxSlider)' }}></output>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-001__component form-001__component-select\">\r\n                        <label className=\"form-001__label \" htmlFor=\"location\">Location</label>\r\n                        {placesList.length > 0 ?\r\n                            <span className=\"select-pure__select select-pure__select--multiple\" > \r\n                                {placesList.map((place, index) =>(\r\n                                    <span className='select-pure__label' key={index} id={place}>\r\n                                        <span className='select-pure__selected-label'>\r\n                                            {place}\r\n                                            <i className='fa fa-times' onClick={this.removePlace}/>\r\n                                        </span>\r\n                                    </span>\r\n                                ))}\r\n                            </span> :\r\n                            <select className=\"form-001__input form-001__dropdown\"\r\n                                value={userData.location}\r\n                                onChange={this.onLocationChangeHandler}\r\n                                id=\"location\" name=\"location\">\r\n                                <option value=\"any\">Any</option>\r\n                                <option value=\"map\">Pick a place</option>\r\n\r\n                            </select>\r\n                        }\r\n\r\n                    </div>\r\n                    <input className=\"button--submit u-margin-large\" type=\"submit\" value=\"Submit\" />\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    fullyRegistered: state.user.fullyRegistered\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) =>({\r\n    setUserPreferences: (preference) => dispatch(setUserPreferences(preference)),\r\n    setUserRegistrationStatus: (value) => dispatch(setUserRegistrationStatus(value))\r\n\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserPreferencePage)","C:\\Users\\black\\Documents\\Programming\\Acumen-Developers\\Web\\snagged\\src\\components\\card-list.component.jsx",[],"C:\\Users\\black\\Documents\\Programming\\Acumen-Developers\\Web\\snagged\\src\\pages\\registration\\auth.page.jsx",[],"C:\\Users\\black\\Documents\\Programming\\Acumen-Developers\\Web\\snagged\\src\\redux\\users\\users.action.js",["313"],"\r\nimport { toast } from \"react-toastify\";\r\nimport { firestore } from \"../../services/firebase\";\r\nimport { SET_ALL_USER, SET_SEARCH_FILTER } from \"../actionTypes\";\r\n\r\n\r\nexport const setAllUsers = (users) => ({\r\n    type: SET_ALL_USER,\r\n    payload: users\r\n})\r\n\r\nexport const setSearchFilter = (filteredUsers) => ({\r\n    type: SET_SEARCH_FILTER,\r\n    payload: filteredUsers\r\n})\r\n\r\n\r\nexport const createUserDocument = async (userAuth, additionalData) => {\r\n    if (!userAuth) return;\r\n   \r\n    const userId = userAuth.uid\r\n    const userRef = firestore.doc(`users/${userId}`);\r\n    const createdAt = new Date();\r\n    const snapshot = await userRef.get();\r\n    if (!snapshot.exists) {\r\n        const { email } = userAuth\r\n        try {\r\n            await userRef.set({\r\n                ...additionalData,\r\n                email,\r\n                createdAt,\r\n            })\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    const userData = await (await userRef.get()).data()\r\n    delete userData.email\r\n    return {\r\n        userId,\r\n        ...userData\r\n    }\r\n}\r\n\r\nexport const saveUserDocument = async (userId, data) => {\r\n    if (!userId) return;\r\n    const userRef = firestore.doc(`users/${userId}`);\r\n    try {\r\n        await userRef.update({\r\n            ...data,\r\n        })\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n \r\n\r\n}\r\n\r\nexport const saveAndReadUserDocument = async (userId, data) => {\r\n    if (!userId) return;\r\n    const userRef = firestore.doc(`users/${userId}`);\r\n    try {\r\n        await userRef.update({\r\n            ...data,\r\n        })\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n\r\n\r\n    const userData = await (await userRef.get()).data()\r\n    delete userData.email\r\n    return userData\r\n}","C:\\Users\\black\\Documents\\Programming\\Acumen-Developers\\Web\\snagged\\src\\redux\\users\\users.reducers.js",[],"C:\\Users\\black\\Documents\\Programming\\Acumen-Developers\\Web\\snagged\\src\\components\\card.component.jsx",["314","315"],"import { faFacebookMessenger } from '@fortawesome/free-brands-svg-icons';\r\nimport { faHeart, faTimesCircle } from '@fortawesome/free-regular-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React, { useState, useEffect } from 'react'\r\nimport { RiBaseStationLine } from \"react-icons/ri\";\r\nimport { MdFavorite, } from \"react-icons/md\";\r\nimport { addToFavorite, removeFromFavorite } from '../redux/user/user.actions';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { auth } from '../services/firebase';\r\nimport defaultImage from '../assets/images/default.png'\r\n\r\nconst gridCard = ({\r\n        loadChatWindow,\r\n        favorites=[],\r\n        userImage,\r\n        username,\r\n        userId,\r\n        name,\r\n        age,\r\n        gender,\r\n        removeFromFavoriteHandler,\r\n        addToFavoriteHandler,\r\n        sexuality,\r\n        isOnline,\r\n        occupation,\r\n        user,\r\n    }) =>{\r\n        return (\r\n            <div className='card card--grid'>\r\n                <img className='card__image' alt={name} src={userImage ? userImage[0] : defaultImage}/>\r\n                <h3 className='card__names'>\r\n                    <span className='username'>{username}</span>\r\n                    <span className='name'>{name}</span>\r\n                </h3>\r\n                {isOnline.includes(userId) ?\r\n                    <div className='card__online-status online' title='online' >\r\n                        <RiBaseStationLine/>\r\n                    </div> :\r\n                    <div className='card__online-status offline' title='offline' >\r\n                        <RiBaseStationLine />\r\n                    </div>\r\n                }\r\n                {favorites.includes(userId) &&\r\n                    <div className='card__favorite'  >\r\n                        <MdFavorite />\r\n                    </div>\r\n                }\r\n\r\n                {\r\n                    auth.currentUser.uid !== userId &&\r\n                    <ul className='user-option__list'>\r\n                        {favorites.includes(userId) ?\r\n                            <li className='user-option__item'\r\n                                title='Remove  from favorite'\r\n                                onClick={() => removeFromFavoriteHandler(userId)} >\r\n                                <FontAwesomeIcon icon={faTimesCircle} />\r\n                            </li> :\r\n                            <li className='user-option__item' title='Favorite user' onClick={() => addToFavoriteHandler(userId)}>\r\n                                <FontAwesomeIcon icon={faHeart} />\r\n                            </li>\r\n                        }\r\n\r\n                        <li className='user-option__item' title='Message user' onClick={() => loadChatWindow({\r\n                            userId: userId,\r\n                            photoImage: userImage[0],\r\n                            username: username\r\n                        })}>\r\n                            <FontAwesomeIcon icon={faFacebookMessenger} />\r\n                        </li>\r\n                    </ul>\r\n                }\r\n                \r\n                \r\n                <div className='card__info'>\r\n                    {age} years\r\n                </div>\r\n                <div className='card__info'>\r\n                    {gender} \r\n                </div>\r\n                <div className='card__info'>\r\n                    {sexuality}\r\n                </div>\r\n                <div className='card__info'>\r\n                    {occupation}\r\n                </div>\r\n                <NavLink to={`profile/${userId}`}  className='button'>\r\n                    View Profile\r\n                </NavLink>\r\n            </div>\r\n        )\r\n\r\n}\r\n\r\nconst flexCard = ({\r\n        loadChatWindow,\r\n        favorites=[],\r\n        userImage,\r\n        username,\r\n        userId,\r\n        name,\r\n        age,\r\n        gender,\r\n        removeFromFavoriteHandler,\r\n        addToFavoriteHandler,\r\n        occupation,\r\n        tribe,\r\n        sexuality,\r\n        city,\r\n        isOnline,\r\n        user,\r\n    }) =>{\r\n\r\n        return(\r\n            <div className='card card--flex'>\r\n                <div  className='card__image'>\r\n                    <img className='image' src={ userImage[0]} alt={username}/>\r\n                    {isOnline.includes(userId) ?\r\n                    <div className='card__online-status online' title='online' >\r\n                        <RiBaseStationLine/>\r\n                    </div> :\r\n                    <div className='card__online-status offline' title='offline' >\r\n                        <RiBaseStationLine />\r\n                    </div>\r\n                }\r\n                {favorites.includes(userId) &&\r\n                    <div className='card__favorite'  >\r\n                        <MdFavorite />\r\n                    </div>\r\n                }\r\n\r\n                {\r\n                    auth.currentUser.uid !== userId &&\r\n                    <ul className='user-option__list'>\r\n                        {favorites.includes(userId) ?\r\n                            <li className='user-option__item'\r\n                                title='Remove  from favorite'\r\n                                onClick={() => removeFromFavoriteHandler(userId)} >\r\n                                <FontAwesomeIcon icon={faTimesCircle} />\r\n                            </li> :\r\n                            <li className='user-option__item' title='Favorite user' onClick={() => addToFavoriteHandler(userId)}>\r\n                                <FontAwesomeIcon icon={faHeart} />\r\n                            </li>\r\n                        }\r\n\r\n                        <li className='user-option__item' title='Message user' onClick={() => loadChatWindow({\r\n                            userId: userId,\r\n                            photoImage: userImage[0],\r\n                            username: username\r\n                        })}>\r\n                            <FontAwesomeIcon icon={faFacebookMessenger} />\r\n                        </li>\r\n                    </ul>\r\n                }\r\n                \r\n                </div>\r\n                <div className='card__detail'>\r\n                    <h5 className='username'>{username}</h5>\r\n                    <div className='card__info'>\r\n                        {age} years\r\n                    </div>\r\n                    <div className='card__info'>\r\n                        {gender} \r\n                    </div>\r\n                    <div className='card__info'>\r\n                        {city}\r\n                    </div>\r\n                    <div className='card__info'>\r\n                        {sexuality}\r\n                    </div>\r\n                    <div className='card__info'>\r\n                        {tribe}\r\n                    </div>\r\n                    <div className='card__info'>\r\n                        {occupation}\r\n                    </div>\r\n                    <NavLink to={`profile/${userId}`}  className='button'>\r\n                        View Profile\r\n                    </NavLink>\r\n                </div>\r\n            </div>\r\n        )\r\n    \r\n}\r\nexport default function Card({\r\n        loadChatWindow,\r\n        favorites=[],\r\n        cardType='column',\r\n        isOnline,\r\n        user,\r\n    }) {\r\n\r\n        const addToFavoriteHandler = (userId) =>{\r\n            addToFavorite(userId)\r\n        }\r\n\r\n         const removeFromFavoriteHandler = (userId) =>{\r\n            removeFromFavorite(userId)\r\n        }\r\n\r\n     return (\r\n         <React.Fragment>\r\n             {\r\n                 cardType === 'grid' ?\r\n                 gridCard({...user, \r\n                        removeFromFavoriteHandler, \r\n                        addToFavoriteHandler, \r\n                        loadChatWindow,\r\n                        isOnline,\r\n                        favorites\r\n                    })  :\r\n                 flexCard({\r\n                    ...user, \r\n                    removeFromFavoriteHandler, \r\n                    addToFavoriteHandler, \r\n                    loadChatWindow,\r\n                    isOnline,\r\n                    favorites\r\n                })\r\n\r\n\r\n             }\r\n         </React.Fragment>\r\n        \r\n    )\r\n}\r\n","C:\\Users\\black\\Documents\\Programming\\Acumen-Developers\\Web\\snagged\\src\\components\\gallery.component.jsx",[],"C:\\Users\\black\\Documents\\Programming\\Acumen-Developers\\Web\\snagged\\src\\components\\user.component.jsx",[],"C:\\Users\\black\\Documents\\Programming\\Acumen-Developers\\Web\\snagged\\src\\components\\filter-modal.component.jsx",["316","317","318","319"],"import React, { Component } from \"react\"; \r\nimport { connect } from \"react-redux\";\r\nimport { setUserPreferences } from \"../redux/user/user.actions\";\r\nimport { setSearchFilter, setAllUsers } from \"../redux/users/users.action\";\r\nimport { filterSearch } from \"../redux/users/users.utils\";\r\nimport SimpleMap from \"./map.component\";\r\nimport Modal from \"./modal.component\";\r\n\r\n/**\r\n *\r\n * This preference on the search page\r\n * @class FilterModal\r\n * @extends {Component}\r\n */\r\n\r\n \r\nclass FilterModal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loading: false,\r\n            userId: props.match ? props.match.params.userId : null,\r\n            showMapModal: false,\r\n            placesList: props.searchFilterValues ? props.searchFilterValues.location : [],\r\n            minSlider: props.searchFilterValues ? props.searchFilterValues.age.minAge : 18,\r\n            maxSlider: props.searchFilterValues ? props.searchFilterValues.age.maxAge : 60,\r\n            isOnline: props.searchFilterValues ? props.searchFilterValues.isOnline :false,\r\n            gender: props.searchFilterValues ? props.searchFilterValues.gender : 'Male',\r\n            location: 'any',\r\n        \r\n        }\r\n    }\r\n\r\n    onSubmit = () =>{\r\n        try {\r\n            const { placesList, gender, isOnline, minSlider, maxSlider } = this.state\r\n            const {\r\n                setUserPreferences,\r\n                users,\r\n                user,\r\n                setSearchFilter,\r\n            } = this.props\r\n\r\n            let locations = placesList.length === 0 ? 'any' : placesList\r\n            const userPreferences = {\r\n                age: {\r\n                    minAge: minSlider,\r\n                    maxAge: maxSlider\r\n                },\r\n                location: locations,\r\n                gender,\r\n                isOnline\r\n            }\r\n            console.log(userPreferences)\r\n            setSearchFilter(userPreferences)\r\n\r\n            this.props.setShowModal(false)\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n       \r\n\r\n    }\r\n\r\n\r\n    onCloseModal = (places = []) => {\r\n        const placesList = places.map((place, index) => (\r\n            place.city\r\n        ))\r\n        this.setState((prevState) => ({\r\n            ...prevState,\r\n            showMapModal: false,\r\n            placesList\r\n        })\r\n        )\r\n    }\r\n    onInputChangeHandler = (e) => {\r\n        const { name, value } = e.target\r\n        this.setState((prevState) => ({\r\n            ...prevState,\r\n            userData: {\r\n                ...prevState.userData,\r\n                [name]: value\r\n            }\r\n        })\r\n        )\r\n    }\r\n\r\n    onChangeSlide = (e) => {\r\n        const { name, value } = e.target\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n\r\n    }\r\n\r\n    removePlace = (e) => {\r\n        const id = e.target.parentNode.parentNode.id || e.target.parentNode.parentNode.parentNode.id\r\n        let places = [...this.state.placesList]\r\n        places = places.filter(place => {\r\n            return place.trim().toLowerCase() !== id.trim().toLowerCase()\r\n        })\r\n        this.setState((prevState) => ({\r\n            ...prevState,\r\n            placesList: places,\r\n        })\r\n        )\r\n    }\r\n\r\n    onInputChangeHandler = (e) => {\r\n        const { name, value } = e.target\r\n        this.setState((prevState) => ({\r\n            ...prevState,\r\n            [name]: value\r\n            \r\n        })\r\n        )\r\n    }\r\n\r\n    onLocationChangeHandler = (e) => {\r\n        const { name, value } = e.target\r\n        if (value === 'map') {\r\n            this.setState((prevState) => ({\r\n                ...prevState,\r\n                showMapModal: true\r\n            })\r\n            )\r\n        } else {\r\n            this.setState((prevState) => ({\r\n                ...prevState,\r\n                userData: {\r\n                    ...prevState.userData,\r\n                    [name]: value\r\n                }\r\n            })\r\n            )\r\n        }\r\n\r\n    }\r\n\r\n  render() {\r\n    const {gender, placesList, location, isOnline, minSlider, maxSlider, showMapModal} = this.state\r\n    const { setShowModal} = this.props;\r\n        return (\r\n            <Modal title='Filter'  closeHandler={() => setShowModal(false)}  submitHandler={this.onSubmit}>\r\n                <div className='filter-modal'>\r\n                        {showMapModal && (\r\n                            <SimpleMap onCloseModal={this.onCloseModal} />\r\n                        )}\r\n                    <div className=\"form-001__component float-left\">\r\n                        <label className=\"form-001__label  \" htmlFor=\"gender\">Gender</label>\r\n                        <select className=\"form-001__input form-001__dropdown\"\r\n                            value={gender}\r\n                            onChange={this.onInputChangeHandler}\r\n                            id=\"gender\" name=\"gender\">\r\n                            <option value=\"Male\">Male</option>\r\n                            <option value=\"Female\">Female</option>\r\n                            <option value=\"Cis Gender\">Cis gender</option>\r\n                            <option value=\"Transgender\">Transgender</option>\r\n                            <option value=\"Gender Fluid\">Gender Fluid</option>\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"form-001__component float-left\">\r\n                        <label className=\"form-001__label  \" htmlFor=\"online\">Is Online</label>\r\n                        <select className=\"form-001__input form-001__dropdown\"\r\n                            value={isOnline}\r\n                            onChange={this.onInputChangeHandler}\r\n                            id=\"online\" name=\"isOnline\">\r\n                            <option value={true}>Yes</option>\r\n                            <option value={false}>No</option>\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"form-001__component-range \">\r\n                        <label className=\"form-001__label \" htmlFor=\"city\">Age Range</label>\r\n                        <div\r\n                            className=\"slide-component\"\r\n                            role=\"group\"\r\n                            style={{ '--minSlider': minSlider, '--maxSlider': maxSlider, '--min': 18, '--max': 99 }}\r\n                        >\r\n                            <label className=\"sr-only\" htmlFor=\"minSlider\">Min Age:</label>\r\n                            <input\r\n                                id=\"minSlider\"\r\n                                type=\"range\"\r\n                                name='minSlider'\r\n                                min=\"18\"\r\n                                value={minSlider} max=\"99\" onChange={this.onChangeSlide} />\r\n                            <output name='Min Age' htmlFor=\"minSlider\" style={{ '--c': 'var(--minSlider)' }}></output>\r\n                            <label className=\"sr-only\" htmlFor=\"maxSlider\">Max Age:</label>\r\n                            <input id=\"maxSlider\"\r\n                                type=\"range\"\r\n                                min=\"18\"\r\n                                value={maxSlider}\r\n                                name='maxSlider'\r\n                                max=\"99\"\r\n                                onChange={this.onChangeSlide} />\r\n                            <output name='Max Age' htmlFor=\"maxSlider\" style={{ '--c': 'var(--maxSlider)' }}></output>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-001__component form-001__component-select\">\r\n                        <label className=\"form-001__label \" htmlFor=\"location\">Location</label>\r\n                        {(placesList.length > 0 && placesList !== 'any') ?\r\n                            <span className=\"select-pure__select select-pure__select--multiple\" >\r\n                                {placesList.map((place, index) => (\r\n                                    <span className='select-pure__label' key={index} id={place}>\r\n                                        <span className='select-pure__selected-label'>\r\n                                            {place}\r\n                                            <i className='fa fa-times' onClick={this.removePlace} />\r\n                                        </span>\r\n                                    </span>\r\n                                ))}\r\n                            </span> :\r\n                            <select className=\"form-001__input form-001__dropdown\"\r\n                                value={location}\r\n                                onChange={this.onLocationChangeHandler}\r\n                                id=\"location\" name=\"location\">\r\n                                <option value=\"any\">Any</option>\r\n                                <option value=\"map\">Pick a place</option>\r\n\r\n                            </select>\r\n                        }\r\n                    </div>\r\n            </div>\r\n        </Modal>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    user: state.user,\r\n    users: state.users.users,\r\n    userPreferences: state.user.userPreferences,\r\n    searchFilterValues: state.users.searchFilterValues,\r\n    usersCount: state.users.usersCount\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    setUserPreferences: (preference) => dispatch(setUserPreferences(preference)),\r\n    setAllUsers: (preference) => dispatch(setAllUsers(preference)),\r\n    setSearchFilter: (users) => dispatch(setSearchFilter(users)),\r\n\r\n\r\n\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FilterModal);","C:\\Users\\black\\Documents\\Programming\\Acumen-Developers\\Web\\snagged\\src\\redux\\users\\users.utils.js",["320","321","322","323"],"import { auth } from \"../../services/firebase\"\r\n\r\nexport const filterSearch = (users=[],  filters={}) =>{\r\n    let locations = filters.location\r\n    if (locations !== 'any' && locations.length !== 0){\r\n        locations = locations.map((location) =>(\r\n            location.toLowerCase()\r\n        ))\r\n    }    \r\n\r\n    users = users.filter(user =>{\r\n        if(user.gender){\r\n            return user.gender.toLowerCase() === filters.gender.toLowerCase()\r\n        }\r\n    })\r\n    .filter(user => {\r\n        if (Number(user.age) >= Number(filters.age.minAge) && Number(user.age) <= Number(filters.age.maxAge)){\r\n            return user\r\n        }\r\n    })\r\n    .filter(user => {\r\n        if(locations === 'any'){\r\n            return user\r\n        }\r\n        return locations.includes(user.city.toLowerCase())\r\n    })\r\n\r\n    return users\r\n\r\n}\r\n\r\n\r\nexport const setUsers = (users) =>{\r\n    const currentUser = users.find(user => user.userId === auth.currentUser.uid )\r\n\r\n    let usersRecord = users.map((user) => {\r\n        if (user.birth) {\r\n            user.age = getAge(user.birth)\r\n            delete user.birth\r\n        }\r\n\r\n        if(currentUser){\r\n            const distance = calcCrow(\r\n                currentUser.coords.lat, \r\n                currentUser.coords.lng, \r\n                user.coords.lat, \r\n                user.coords.lng)\r\n            user.distanceFromCurrentUser = distance;\r\n        }\r\n        if(user.createdAt){\r\n\r\n            let seconds = user.createdAt.seconds\r\n            let microsecond = seconds * 1000;\r\n            user.secondsAgo =  (Math.floor(Date.now() - microsecond) / 1000)\r\n            user.timeAgo = getTimeAgo(seconds)\r\n        }\r\n        return user\r\n    })\r\n    return usersRecord\r\n}\r\n\r\nfunction getAge(birth) {\r\n    const today = new Date();\r\n    const birthDate = new Date(birth)\r\n    let year = today.getFullYear() - birthDate.getFullYear()\r\n    const month = today.getFullYear() - birthDate.getFullYear()\r\n    if (month < 0 ||\r\n        (month === 0 && today.getDate() < birthDate.getDate())) {\r\n        year--;\r\n    }\r\n\r\n    return year\r\n\r\n}\r\n\r\nfunction timeTag (s) {\r\n    if (s === 1){\r\n        return ' ago'\r\n    } else{\r\n        return 's ago'\r\n    }\r\n}\r\nfunction getTimeAgo (seconds) {\r\n    let microsecond = seconds * 1000;\r\n    let secondsDifference = (Math.floor(Date.now() - microsecond) / 1000 )\r\n    let interval = Math.floor(secondsDifference / 31536000) \r\n    if (interval > 1){\r\n        return interval + ' year' + timeTag(interval)\r\n    }  \r\n\r\n    interval = Math.floor(secondsDifference / 2628003) \r\n    if (interval > 1) {\r\n        return interval + ' month' + timeTag(interval)\r\n    }\r\n\r\n    interval = Math.floor(secondsDifference / 86400)\r\n    if (interval > 1) {\r\n        return interval + ' day' + timeTag(interval)\r\n    }\r\n\r\n    interval = Math.floor(secondsDifference / 3600)\r\n    if (interval > 1) {\r\n        return interval + ' hour' + timeTag(interval)\r\n    }\r\n\r\n    interval = Math.floor(secondsDifference / 60)\r\n    if (interval > 1) {\r\n        return interval + ' minute' + timeTag(interval)\r\n    }\r\n\r\n    return Math.floor(secondsDifference) + ' second' + timeTag(interval)\r\n   \r\n\r\n\r\n}\r\n\r\n//This function takes in latitude and longitude of two location and returns the distance between them as the crow flies (in km)\r\n    function calcCrow(lat1, lon1, lat2, lon2) \r\n    {\r\n      var R = 6371; // km\r\n      var dLat = toRad(lat2-lat1);\r\n      var dLon = toRad(lon2-lon1);\r\n      var lat1 = toRad(lat1);\r\n      var lat2 = toRad(lat2);\r\n\r\n      var a = Math.sin(dLat/2) * Math.sin(dLat/2) +\r\n        Math.sin(dLon/2) * Math.sin(dLon/2) * Math.cos(lat1) * Math.cos(lat2); \r\n      var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a)); \r\n      var d = R * c;\r\n      return d;\r\n    }\r\n\r\n    // Converts numeric degrees to radians\r\n    function toRad(Value) \r\n    {\r\n        return Value * Math.PI / 180;\r\n    }","C:\\Users\\black\\Documents\\Programming\\Acumen-Developers\\Web\\snagged\\src\\components\\chat.component.jsx",["324","325","326"],"import React, { useState , useEffect} from 'react'\r\nimport { BsChatFill, BsSearch } from \"react-icons/bs\";\r\nimport { connect } from 'react-redux'\r\nimport { chatWindowHandler } from '../redux/user/user.actions';\r\nimport { AiFillCloseCircle } from \"react-icons/ai\";\r\nimport { f, database, auth } from '../services/firebase';\r\nimport ChatMessaging from './chat-messaging.component';\r\nimport defaultImage from '../assets/images/default.png'\r\n\r\nlet mapStateToProps = (state) => ({\r\n    showChatWindow: state.user.showChatWindow,\r\n    currentUser: state.user.currentUser,\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n\r\n    chatWindowHandler: () => dispatch(chatWindowHandler()),\r\n\r\n})\r\n\r\nconst ChatButton = ({ chatWindowHandler, showChatWindow}) => {\r\n    return(\r\n \r\n        showChatWindow ?\r\n            <div className=\"chat__icon\" onClick={ () =>chatWindowHandler()}>\r\n                <AiFillCloseCircle />\r\n            </div> :\r\n            <div className=\"chat__icon\" onClick={chatWindowHandler}>\r\n                <BsChatFill />\r\n            </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport const ChatButtonWithRedux =  connect(mapStateToProps, mapDispatchToProps)(ChatButton)\r\n\r\n\r\nconst ChatWindow = ({ user=null , showChatWindow, isOnline, onlineStatus, users}) => {\r\n    const [search, setSearch] = useState('')\r\n    const [filteredUsers, setFilteredUsers ] = useState(users)\r\n    const [selectedUser, setSelectedUser ] = useState(user)\r\n    useEffect(() => {\r\n        setSelectedUser(user)\r\n    }, [user])\r\n\r\n    \r\n    useEffect(() => {\r\n        let u = users.filter((user) =>{\r\n            if(!search){\r\n                return user\r\n            }\r\n            return user.username.toLowerCase().includes(search.toLowerCase())\r\n        })\r\n\r\n        setFilteredUsers(u)\r\n    }, [search, users])\r\n\r\n\r\n\r\n    return (\r\n        showChatWindow &&\r\n            <div className='chat-window'>\r\n                {selectedUser &&\r\n                    <ChatMessaging user={selectedUser} />\r\n                }\r\n                \r\n                <div className='chat-history'>\r\n                    <div className='users__search'>\r\n                        <input type='type' placeholder='Search' value={search} onChange={(e) => setSearch(e.target.value)} />\r\n                        <BsSearch />\r\n                    </div>\r\n                    <ul className='users__list'>\r\n                        {(filteredUsers && filteredUsers.length > 0) && (\r\n                            filteredUsers.map((user) =>{\r\n                                if(user.userId !== auth.currentUser.uid){\r\n                                    return ( <li key={user.userId} className='user__item' onClick={() => setSelectedUser({\r\n                                        userId: user.userId,\r\n                                        photoImage: user.userImage ? user.userImage[0] : defaultImage,\r\n                                        username: user.username\r\n                                    })}>\r\n                                        <div className='user__image'>\r\n                                            <div className='user__avatar'>\r\n                                                <img src={user.userImage ? user.userImage[0] : defaultImage} alt={user.username} />\r\n                                            </div>\r\n                                            <span \r\n                                                className={`status-icon ${isOnline.includes(user.userId) ? 'online' : 'offline'}`}>\r\n                                            </span>\r\n                                        </div>\r\n\r\n                                        <p className='user__detail'>\r\n                                            <span className='username'>{user.username}</span>\r\n                                            <span className='status'>\r\n                                                {isOnline.includes(user.userId) ? 'online' : 'offline'}\r\n                                            </span>\r\n                                        </p>\r\n\r\n                                    </li>\r\n                                    )}\r\n                                \r\n                            })\r\n                            \r\n                        )}\r\n                        \r\n                    </ul> \r\n                </div>\r\n                \r\n            </div>\r\n        \r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nexport const ChatWindowWithRedux = connect(mapStateToProps, null)(ChatWindow)","C:\\Users\\black\\Documents\\Programming\\Acumen-Developers\\Web\\snagged\\src\\components\\authform.component.jsx",[],"C:\\Users\\black\\Documents\\Programming\\Acumen-Developers\\Web\\snagged\\src\\components\\chat-messaging.component.jsx",[],"C:\\Users\\black\\Documents\\Programming\\Acumen-Developers\\Web\\snagged\\src\\redux\\user\\user.utils.js",["327"],"export const filterUsersByPreference = (users = [], isAuthenticated = false, filters = {}) => {\r\n    if (!isAuthenticated) {\r\n        return users\r\n    }\r\n\r\n    if (!filters || Object.keys(filters).length === 0) {\r\n        return users;\r\n    }\r\n\r\n    if (users.length === 0 || !users) {\r\n        return users\r\n    }\r\n    let locations = filters.location\r\n    if (locations !== 'any' && locations.length !== 0) {\r\n        locations = locations.map((location) => (\r\n            location.toLowerCase()\r\n        ))\r\n    }\r\n\r\n    users = users.filter(user => {\r\n        console.log(user.gender, filters.gender)\r\n        return user.gender.toLowerCase() === filters.gender.toLowerCase()\r\n    })\r\n        .filter(user => {\r\n            if (Number(user.age) >= Number(filters.age.minAge) && Number(user.age) <= Number(filters.age.maxAge)) {\r\n                return user\r\n            }\r\n        })\r\n        .filter(user => {\r\n            if (locations === 'any') {\r\n                return user\r\n            }\r\n            return locations.includes(user.city.toLowerCase())\r\n        })\r\n\r\n    return users\r\n\r\n}\r\n\r\n\r\nexport const setUser = (user) => {\r\n        if (user.birth) {\r\n            user.age = getAge(user.birth)\r\n            delete user.birth\r\n        }\r\n        if (user.createdAt) {\r\n            let seconds = user.createdAt.seconds\r\n            let microsecond = seconds * 1000;\r\n            user.secondsAgo = (Math.floor(Date.now() - microsecond) / 1000)\r\n            user.timeAgo = getTimeAgo(seconds)\r\n        }\r\n        return user\r\n}\r\n\r\nfunction getAge(birth) {\r\n    const today = new Date();\r\n    const birthDate = new Date(birth)\r\n    let year = today.getFullYear() - birthDate.getFullYear()\r\n    const month = today.getFullYear() - birthDate.getFullYear()\r\n    if (month < 0 ||\r\n        (month === 0 && today.getDate() < birthDate.getDate())) {\r\n        year--;\r\n    }\r\n\r\n    return year\r\n\r\n}\r\n\r\nfunction timeTag(s) {\r\n    if (s === 1) {\r\n        return ' ago'\r\n    } else {\r\n        return 's ago'\r\n    }\r\n}\r\nfunction getTimeAgo(seconds) {\r\n    let microsecond = seconds * 1000;\r\n    let secondsDifference = (Math.floor(Date.now() - microsecond) / 1000)\r\n    let interval = Math.floor(secondsDifference / 31536000)\r\n    if (interval > 1) {\r\n        return interval + ' year' + timeTag(interval)\r\n    }\r\n\r\n    interval = Math.floor(secondsDifference / 2628003)\r\n    if (interval > 1) {\r\n        return interval + ' month' + timeTag(interval)\r\n    }\r\n\r\n    interval = Math.floor(secondsDifference / 86400)\r\n    if (interval > 1) {\r\n        return interval + ' day' + timeTag(interval)\r\n    }\r\n\r\n    interval = Math.floor(secondsDifference / 3600)\r\n    if (interval > 1) {\r\n        return interval + ' hour' + timeTag(interval)\r\n    }\r\n\r\n    interval = Math.floor(secondsDifference / 60)\r\n    if (interval > 1) {\r\n        return interval + ' minute' + timeTag(interval)\r\n    }\r\n\r\n    return Math.floor(secondsDifference) + ' second' + timeTag(interval)\r\n\r\n\r\n\r\n}\r\n\r\n\r\nexport function verifyMatch (currentUser, user, criteria) {\r\n    let usersMatchUp = false\r\n    return usersMatchUp\r\n\r\n}","C:\\Users\\black\\Documents\\Programming\\Acumen-Developers\\Web\\snagged\\src\\components\\help.component.jsx",["328","329","330","331"],"import { faPhone } from '@fortawesome/free-solid-svg-icons';\r\nimport React, {useState} from 'react'\r\nimport { BiHelpCircle } from 'react-icons/bi';\r\nimport { FaWindowClose } from 'react-icons/fa';\r\nimport { connect } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { helpWindowHandler } from '../redux/user/user.actions';\r\nimport CustomButton from './custom-button.component';\r\nimport Chatbot from 'react-chatbot-kit'\r\nimport MessageParser from './chatbot/message-parser';\r\nimport ActionProvider from './chatbot/action-provider';\r\nimport config from './chatbot/config';\r\n\r\n\r\nfunction Help({helpWindowHandler, showHelpWindow}) {\r\n\r\n    const [chatInput, setChatInput] = useState('')\r\n\r\n    const sendMessage = () =>{\r\n\r\n    }\r\n\r\n    return (\r\n        <div className='help'>\r\n            <NavLink to='/help' activeClassName={null}>\r\n                <BiHelpCircle className='help__icon'/>\r\n            </NavLink>\r\n            <CustomButton text='helpline'\r\n                onClick={() => helpWindowHandler(true)}\r\n                color='green'\r\n                icon={faPhone} />\r\n            {\r\n                showHelpWindow &&\r\n                <div className='help__window'>\r\n                    <FaWindowClose \r\n                        onClick={() => helpWindowHandler(false)}\r\n                        className='close-button'/>\r\n                    {/* <Chatbot config={config} actionProvider={ActionProvider} messageParser={MessageParser} />  */}\r\n                    <form onSubmit={sendMessage} className='chat__send'>\r\n                        <input \r\n                            className='chat__input' \r\n                            type='text'\r\n                            value={chatInput} \r\n                            onChange={(e) => setChatInput(e.target.value)} />\r\n                        <button className='chat__send-box' disabled={!chatInput}>Send</button>\r\n                    </form>\r\n                </div>\r\n\r\n            }\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n\tshowHelpWindow : state.user.showHelpWindow\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n\thelpWindowHandler\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Help);","C:\\Users\\black\\Documents\\Programming\\Acumen-Developers\\Web\\snagged\\src\\pages\\help.page.jsx",[],"C:\\Users\\black\\Documents\\Programming\\Acumen-Developers\\Web\\snagged\\src\\components\\chatbot\\message-parser.js",[],"C:\\Users\\black\\Documents\\Programming\\Acumen-Developers\\Web\\snagged\\src\\components\\chatbot\\config.js",[],"C:\\Users\\black\\Documents\\Programming\\Acumen-Developers\\Web\\snagged\\src\\components\\chatbot\\action-provider.js",[],"C:\\Users\\black\\Documents\\Programming\\Acumen-Developers\\Web\\snagged\\src\\pages\\admin\\admin.jsx",[],"C:\\Users\\black\\Documents\\Programming\\Acumen-Developers\\Web\\snagged\\src\\pages\\admin\\admin-home.page.jsx",["332"],"import React, { Component } from \"react\"; \r\nimport CustomHeader from \"../../components/custom-header.component\";\r\n\r\n\r\nclass AdminHome extends Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment >\r\n        <h1>AdminHome</h1>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AdminHome;","C:\\Users\\black\\Documents\\Programming\\Acumen-Developers\\Web\\snagged\\src\\redux\\users\\users.selector.js",[],"C:\\Users\\black\\Documents\\Programming\\Acumen-Developers\\Web\\snagged\\src\\components\\admin\\admin-left-nav.component.jsx",["333"],"import React from 'react'\r\nimport { NavLink, useLocation } from 'react-router-dom'\r\n\r\nexport default function AdminLeftNav() {\r\n    const location = useLocation();\r\n\r\n    return (\r\n        <nav className='admin-nav'>\r\n            <ul className='admin-nav__list'>\r\n                <li className='admin-nav__item'>\r\n                    <NavLink exact to='/admin' \r\n                    activeClassName='admin-nav__active'\r\n                     className='admin-nav__link'>\r\n                            Dashboard\r\n                    </NavLink>\r\n                </li>\r\n                <li className='admin-nav__item'>\r\n                    <NavLink to='/admin/users'\r\n                        activeClassName='admin-nav__active'\r\n                        className='admin-nav__link'>\r\n                        Users\r\n                    </NavLink>\r\n                </li>\r\n                <li className='admin-nav__item'>\r\n                    <NavLink to='/admin/messages'\r\n                        activeClassName='admin-nav__active'\r\n                        className='admin-nav__link'>\r\n                        Messages\r\n                    </NavLink>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\n","C:\\Users\\black\\Documents\\Programming\\Acumen-Developers\\Web\\snagged\\src\\pages\\admin\\admin-messages.page.jsx",[],"C:\\Users\\black\\Documents\\Programming\\Acumen-Developers\\Web\\snagged\\src\\pages\\admin\\users.page.jsx",[],"C:\\Users\\black\\Documents\\Programming\\Acumen-Developers\\Web\\snagged\\src\\components\\pre-chat-component.jsx",[],"C:\\Users\\black\\Documents\\Programming\\Acumen-Developers\\Web\\snagged\\src\\pages\\user-preferences.component.jsx",["334"],"C:\\Users\\black\\Documents\\Programming\\Acumen-Developers\\Web\\snagged\\src\\data\\matchQuestions.js",[],"C:\\Users\\black\\Documents\\Programming\\Acumen-Developers\\Web\\snagged\\src\\data\\firstQuestions.js",[],{"ruleId":"335","replacedBy":"336"},{"ruleId":"337","replacedBy":"338"},{"ruleId":"339","severity":1,"message":"340","line":94,"column":16,"nodeType":"341","messageId":"342","endLine":94,"endColumn":25},{"ruleId":"339","severity":1,"message":"343","line":42,"column":19,"nodeType":"341","messageId":"342","endLine":42,"endColumn":24},{"ruleId":"339","severity":1,"message":"344","line":43,"column":19,"nodeType":"341","messageId":"342","endLine":43,"endColumn":23},{"ruleId":"339","severity":1,"message":"345","line":1,"column":15,"nodeType":"341","messageId":"342","endLine":1,"endColumn":24},{"ruleId":"339","severity":1,"message":"346","line":3,"column":10,"nodeType":"341","messageId":"342","endLine":3,"endColumn":14},{"ruleId":"339","severity":1,"message":"347","line":3,"column":16,"nodeType":"341","messageId":"342","endLine":3,"endColumn":25},{"ruleId":"339","severity":1,"message":"348","line":3,"column":10,"nodeType":"341","messageId":"342","endLine":3,"endColumn":15},{"ruleId":"339","severity":1,"message":"347","line":6,"column":20,"nodeType":"341","messageId":"342","endLine":6,"endColumn":29},{"ruleId":"339","severity":1,"message":"349","line":7,"column":10,"nodeType":"341","messageId":"342","endLine":7,"endColumn":18},{"ruleId":"339","severity":1,"message":"344","line":35,"column":19,"nodeType":"341","messageId":"342","endLine":35,"endColumn":23},{"ruleId":"339","severity":1,"message":"350","line":5,"column":5,"nodeType":"341","messageId":"342","endLine":5,"endColumn":18},{"ruleId":"339","severity":1,"message":"351","line":122,"column":17,"nodeType":"341","messageId":"342","endLine":122,"endColumn":29},{"ruleId":"339","severity":1,"message":"352","line":2,"column":8,"nodeType":"341","messageId":"342","endLine":2,"endColumn":17},{"ruleId":"335","replacedBy":"353"},{"ruleId":"337","replacedBy":"354"},{"ruleId":"339","severity":1,"message":"345","line":3,"column":28,"nodeType":"341","messageId":"342","endLine":3,"endColumn":37},{"ruleId":"339","severity":1,"message":"355","line":6,"column":7,"nodeType":"341","messageId":"342","endLine":6,"endColumn":18},{"ruleId":"339","severity":1,"message":"356","line":7,"column":10,"nodeType":"341","messageId":"342","endLine":7,"endColumn":28},{"ruleId":"339","severity":1,"message":"357","line":98,"column":17,"nodeType":"341","messageId":"342","endLine":98,"endColumn":35},{"ruleId":"339","severity":1,"message":"348","line":2,"column":10,"nodeType":"341","messageId":"342","endLine":2,"endColumn":15},{"ruleId":"339","severity":1,"message":"358","line":4,"column":17,"nodeType":"341","messageId":"342","endLine":4,"endColumn":25},{"ruleId":"339","severity":1,"message":"345","line":4,"column":27,"nodeType":"341","messageId":"342","endLine":4,"endColumn":36},{"ruleId":"339","severity":1,"message":"359","line":5,"column":10,"nodeType":"341","messageId":"342","endLine":5,"endColumn":22},{"ruleId":"339","severity":1,"message":"357","line":38,"column":17,"nodeType":"341","messageId":"342","endLine":38,"endColumn":35},{"ruleId":"339","severity":1,"message":"360","line":39,"column":17,"nodeType":"341","messageId":"342","endLine":39,"endColumn":22},{"ruleId":"339","severity":1,"message":"344","line":40,"column":17,"nodeType":"341","messageId":"342","endLine":40,"endColumn":21},{"ruleId":"361","severity":1,"message":"362","line":11,"column":31,"nodeType":"363","messageId":"364","endLine":11,"endColumn":33},{"ruleId":"361","severity":1,"message":"362","line":16,"column":18,"nodeType":"363","messageId":"364","endLine":16,"endColumn":20},{"ruleId":"365","severity":1,"message":"366","line":123,"column":11,"nodeType":"341","messageId":"367","endLine":123,"endColumn":15},{"ruleId":"365","severity":1,"message":"368","line":124,"column":11,"nodeType":"341","messageId":"367","endLine":124,"endColumn":15},{"ruleId":"339","severity":1,"message":"369","line":6,"column":10,"nodeType":"341","messageId":"342","endLine":6,"endColumn":11},{"ruleId":"339","severity":1,"message":"370","line":6,"column":13,"nodeType":"341","messageId":"342","endLine":6,"endColumn":21},{"ruleId":"361","severity":1,"message":"371","line":75,"column":54,"nodeType":"363","messageId":"364","endLine":75,"endColumn":56},{"ruleId":"361","severity":1,"message":"362","line":24,"column":22,"nodeType":"363","messageId":"364","endLine":24,"endColumn":24},{"ruleId":"339","severity":1,"message":"372","line":9,"column":8,"nodeType":"341","messageId":"342","endLine":9,"endColumn":15},{"ruleId":"339","severity":1,"message":"373","line":10,"column":8,"nodeType":"341","messageId":"342","endLine":10,"endColumn":21},{"ruleId":"339","severity":1,"message":"374","line":11,"column":8,"nodeType":"341","messageId":"342","endLine":11,"endColumn":22},{"ruleId":"339","severity":1,"message":"375","line":12,"column":8,"nodeType":"341","messageId":"342","endLine":12,"endColumn":14},{"ruleId":"339","severity":1,"message":"376","line":2,"column":8,"nodeType":"341","messageId":"342","endLine":2,"endColumn":20},{"ruleId":"339","severity":1,"message":"377","line":5,"column":11,"nodeType":"341","messageId":"342","endLine":5,"endColumn":19},{"ruleId":"339","severity":1,"message":"378","line":5,"column":5,"nodeType":"341","messageId":"342","endLine":5,"endColumn":16},"no-native-reassign",["379"],"no-negated-in-lhs",["380"],"no-unused-vars","'appLoaded' is assigned a value but never used.","Identifier","unusedVar","'token' is assigned a value but never used.","'user' is assigned a value but never used.","'useEffect' is defined but never used.","'auth' is defined but never used.","'firestore' is defined but never used.","'toast' is defined but never used.","'BsImages' is defined but never used.","'faCheckCircle' is defined but never used.","'onCloseModal' is assigned a value but never used.","'PropTypes' is defined but never used.",["379"],["380"],"'filterUsers' is assigned a value but never used.","'createUserDocument' is defined but never used.","'setUserPreferences' is assigned a value but never used.","'useState' is defined but never used.","'filterSearch' is defined but never used.","'users' is assigned a value but never used.","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-redeclare","'lat1' is already defined.","redeclared","'lat2' is already defined.","'f' is defined but never used.","'database' is defined but never used.","Array.prototype.map() expects a value to be returned at the end of arrow function.","'Chatbot' is defined but never used.","'MessageParser' is defined but never used.","'ActionProvider' is defined but never used.","'config' is defined but never used.","'CustomHeader' is defined but never used.","'location' is assigned a value but never used.","'ProgressBar' is defined but never used.","no-global-assign","no-unsafe-negation"]